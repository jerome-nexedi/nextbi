<?xml version="1.0" encoding="ISO-8859-1"?>

<web-app>
    
    <description>Serves Javascript and CSS library resources</description>
   
    <!-- Gzips and caches http resources -->
    <filter>
        <filter-name>pageCachingFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
        	<param-name>contextAttribute</param-name>
        	<param-value>context_com.seekon.bicp.resource</param-value>
        </init-param>
    </filter>
    
    <!-- Applies a far-future expiration header to the response -->
    <filter>
        <filter-name>CacheExpiresFilter</filter-name>
        <filter-class>org.jasig.resourceserver.utils.filter.CacheExpirationFilter</filter-class>
        <!-- Length of time to set in cache headers (in seconds) -->
        <!-- DEFAULT VALUE:
        <init-param>
            <param-name>cacheMaxAge</param-name>
            <param-value>31536000</param-value>
        </init-param>
        -->
        
        <!-- Time between regenerating cache header strings (in milliseconds) -->
        <!-- DEFAULT VALUE:
        <init-param>
            <param-name>regenerateHeadersInterval</param-name>
            <param-value>1000</param-value>
        </init-param>
        -->
    </filter>
    
    <!-- filter mappings for javascript and css resources -->
    
    <filter-mapping>
        <filter-name>pageCachingFilter</filter-name>
        <url-pattern>*.js</url-pattern>
        <url-pattern>*.css</url-pattern>
    </filter-mapping>
    
    <filter-mapping>
        <filter-name>CacheExpiresFilter</filter-name>
        <url-pattern>/rs/*</url-pattern>
    </filter-mapping>
        
    
    <servlet>
        <servlet-name>ResourceServerServlet</servlet-name>
        <servlet-class>com.seekon.bicp.springsupport.web.servlet.OsgiSupportDispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:resourceServerContext.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    
    <servlet>
        <servlet-name>ViewRendererServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.ViewRendererServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>ViewRendererServlet</servlet-name>
        <url-pattern>/WEB-INF/servlet/view</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
        <servlet-name>ResourceServerServlet</servlet-name>
        <url-pattern>/resourses.html</url-pattern>
    </servlet-mapping>
    
    <welcome-file-list>
        <welcome-file>resourses.html</welcome-file>
    </welcome-file-list>
</web-app>
