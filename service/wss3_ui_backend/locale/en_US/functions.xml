<?xml version="1.0" encoding="utf-8"?>
<!-- Don't change this locale or you risk breaking the user interface! -->
<root lang="en_US">
	<general>
		<parameter_separator>,</parameter_separator>
		<column_separator>,</column_separator>
		<row_separator>;</row_separator>
	</general>
	<groups>
		<group id="DATE_TIME" name="Date &amp; Time">
			<translation>Date &amp; Time</translation>
		</group>
		<group id="FINANCIAL" name="Financial">
			<translation>Financial</translation>
		</group>
		<group id="INFORMATION" name="Information">
			<translation>Information</translation>
		</group>
		<group id="LOGICAL" name="Logical">
			<translation>Logical</translation>
		</group>
		<group id="LOOKUP_REFERENCE" name="Lookup &amp; Reference">
			<translation>Lookup &amp; Reference</translation>
		</group>
		<group id="MATH_TRIG" name="Math &amp; Trig">
			<translation>Math &amp; Trig</translation>
		</group>
		<group id="PALO" name="Palo">
			<translation>Palo</translation>
		</group>
		<group id="STATISTICAL" name="Statistical">
			<translation>Statistical</translation>
		</group>
		<group id="TEXT" name="Text">
			<translation>Text</translation>
		</group>
	</groups>
	<function name="ABS" category="MATH_TRIG">
		<translation>ABS</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the real number for which you want the absolute value.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[ABS(number)]]></syntax>
			<short><![CDATA[Returns the absolute value of a number, a number without its sign.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ACOS" category="MATH_TRIG">
		<translation>ACOS</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the cosine of the angle you want and must be from -1 to 1.]]></parameter>
			</parameters>
			<syntax><![CDATA[ACOS(number)]]></syntax>
			<short><![CDATA[Returns the arccosine of a number, in radians in the range 0 to Pi. The arccosine is the angle whose cosine is Number.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ACOSH" category="MATH_TRIG">
		<translation>ACOSH</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is any real number equal to or greater than 1.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[ACOSH(number)]]></syntax>
			<short><![CDATA[Returns the inverse hyperbolic cosine of a number.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ADDRESS" category="LOOKUP_REFERENCE">
		<translation>ADDRESS</translation>
		<description>
			<parameters>
				<parameter name="row_num" type="number"><![CDATA[Row_num is the row number to use in the cell reference. ]]></parameter>
				<parameter name="column_num" type="number"><![CDATA[Column_num is the column number to use in the cell reference. ]]></parameter>
				<parameter name="abs_num" type="number"><![CDATA[Abs_num specifies the type of reference to return. ]]></parameter>
				<parameter name="a1" type="logical"><![CDATA[A1 is a logical value that specifies the A1 or R1C1 reference style. 		  If a1 is TRUE or omitted, ADDRESS returns an A1-style reference; 		  if FALSE, ADDRESS returns an R1C1-style reference. ]]></parameter>
				<parameter name="sheet_text" type="text"><![CDATA[Sheet_text is text specifying the name of the worksheet to be used as the external reference. 		  If sheet_text is omitted, no sheet name is used. ]]></parameter>
			</parameters>
			<syntax><![CDATA[ADDRESS(row_num,column_num,abs_num,a1,sheet_text)]]></syntax>
			<short><![CDATA[Creates a cell address as text, given specified row and column numbers. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="AND" category="LOGICAL">
		<translation>AND</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Logical" type="logical"><![CDATA[logical1,logical2,... are 1 to 30 conditions you want to test that can beeither TRUE or FALSE and can be logical values, arrays, or references.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[AND(logical1,logical2,...)]]></syntax>
			<short><![CDATA[Checks whether all arguments are TRUE, and returns TRUE if all arguments are TRUE. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ASIN" category="MATH_TRIG">
		<translation>ASIN</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the sine of the angle you want and must be from -1 to 1.]]></parameter>
			</parameters>
			<syntax><![CDATA[ASIN(number)]]></syntax>
			<short><![CDATA[Returns the arcsine of a number in radians  in the range -Pi/2 to Pi/2.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ASINH" category="MATH_TRIG">
		<translation>ASINH</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is any real number equal to or greater than 1.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[ASINH(number)]]></syntax>
			<short><![CDATA[Returns the inverse hyperbolic sine of a number.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ATAN" category="MATH_TRIG">
		<translation>ATAN</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the tangent of the angle you want.]]></parameter>
			</parameters>
			<syntax><![CDATA[ATAN(number)]]></syntax>
			<short><![CDATA[Returns the arctangent of a number in radians, in the range -Pi/2 to Pi/2.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ATAN2" category="MATH_TRIG">
		<translation>ATAN2</translation>
		<description>
			<parameters>
				<parameter name="X_num" type="number"><![CDATA[X_num is the x-coordinate of the point.]]></parameter>
				<parameter name="Y_num" type="number"><![CDATA[Y_num is the y-coordinate of the point.]]></parameter>
			</parameters>
			<syntax><![CDATA[ATAN2(y_num,y_num)]]></syntax>
			<short><![CDATA[Returns the arctangent of the specified x- and y- coordinates, in radians between -Pi and Pi, excluding -Pi.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ATANH" category="MATH_TRIG">
		<translation>ATANH</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is any real number between -1 and 1 excluding -1 and 1.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[ATANH(number)]]></syntax>
			<short><![CDATA[Returns the inverse hyperbolic tangent of a number.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="AVEDEV" category="STATISTICAL">
		<translation>AVEDEV</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Number" type="any"><![CDATA[number1,number2,... are 1 to 30 arguments for which you want theaverage of the absolute deviations.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[AVEDEV(number1,number2,...)]]></syntax>
			<short><![CDATA[Returns the average of the absolute deviations of data points from their mean. Arguments can be numbers or names, arrays, or references that contain numbers.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="AVERAGE" category="STATISTICAL">
		<translation>AVERAGE</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Number" type="any"><![CDATA[number1,number2,... are 1 to 30 numeric arguments for which you wantthe average.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[AVERAGE(number1,number2,...)]]></syntax>
			<short><![CDATA[Returns the average (arithmetic mean) of its arguments, which can be numbers or names, arrays, or references that contain numbers. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="AVERAGEA" category="STATISTICAL">
		<translation>AVERAGEA</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Number" type="any"><![CDATA[number1,number2,... are 1 to 30 numeric arguments for which you want the average.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[AVERAGEA(value1,value2,...)]]></syntax>
			<short><![CDATA[Returns the average (arithmetic mean) of its arguments, evaluating text and FALSE in arguments as 0; TRUE evaluates as 1. Arguments can be numbers, names, arrays, or references.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="BETADIST" category="STATISTICAL">
		<translation>BETADIST</translation>
		<description>
			<parameters>
				<parameter name="X" type="number"><![CDATA[X is the value between A and B at which to evaluate the function.  ]]></parameter>
				<parameter name="Alpha" type="number"><![CDATA[Alpha is a parameter to the distribution and must be greater than 0.  ]]></parameter>
				<parameter name="Beta" type="number"><![CDATA[Beta is a parameter to the distribution and must be greater than 0.  ]]></parameter>
				<parameter name="A" type="number"><![CDATA[A is an optional lower bound to the interval of x. If omitted, A = 0.  ]]></parameter>
				<parameter name="B" type="number"><![CDATA[B is an optional upper bound to the interval of x. If omitted, B = 1.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[BETADIST(x,alpha,beta,A,B)]]></syntax>
			<short><![CDATA[Returns the cumulative beta probability density function.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="BETAINV" category="STATISTICAL">
		<translation>BETAINV</translation>
		<description>
			<parameters>
				<parameter name="Probability" type="number"><![CDATA[Probability is a probability associated with the beta distribution.  ]]></parameter>
				<parameter name="Alpha" type="number"><![CDATA[Alpha is a parameter to the distribution and must be greater than 0.  ]]></parameter>
				<parameter name="Beta" type="number"><![CDATA[Beta is a parameter to the distribution and must be greater than 0.  ]]></parameter>
				<parameter name="A" type="number"><![CDATA[A is an optional lower bound to the interval of x. If omitted, A = 0.  ]]></parameter>
				<parameter name="B" type="number"><![CDATA[B is an optional upper bound to the interval of x. If omitted, B = 1.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[BETAINV(probability,alpha,beta,A,B)]]></syntax>
			<short><![CDATA[Returns the inverse of the cumulative beta probability density function  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="BINOMDIST" category="STATISTICAL">
		<translation>BINOMDIST</translation>
		<description>
			<parameters>
				<parameter name="Number_s" type="number"><![CDATA[Number_s is the number of successes in trials.  ]]></parameter>
				<parameter name="Trials" type="number"><![CDATA[Trials is the number of independent trials.  ]]></parameter>
				<parameter name="Probability_s" type="number"><![CDATA[Probability_s is the probability of success on each trial.  ]]></parameter>
				<parameter name="Cumulative" type="logical"><![CDATA[Cumulative is a logical value: for the cumulative distribution function, use TRUE; for the probability mass function, use FALSE. ]]></parameter>
			</parameters>
			<syntax><![CDATA[BINOMDIST(number_s,trials,probability_s,cumulative)]]></syntax>
			<short><![CDATA[Returns the individual term binomial distribution probability.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="CEILING" category="MATH_TRIG">
		<translation>CEILING</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the value you want to round.  ]]></parameter>
				<parameter name="Significance" type="number"><![CDATA[Significance is the multiple to which you want to round.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[CEILING(number,significance)]]></syntax>
			<short><![CDATA[Rounds a number up, to the nearest integer or to the nearest multiple of significance. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="CHAR" category="TEXT">
		<translation>CHAR</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is a number between 1 and 255 specifying which character you want.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[CHAR(number)]]></syntax>
			<short><![CDATA[Returns the character specified by the code number from the character set for your computer. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="CHIDIST" category="STATISTICAL">
		<translation>CHIDIST</translation>
		<description>
			<parameters>
				<parameter name="X" type="number"><![CDATA[X is the value at which you want to evaluate the distribution, a nonnegative number. ]]></parameter>
				<parameter name="Deg_freedom" type="number"><![CDATA[Deg_freedom is the number of degrees of freedom, a number between 1 and 10^10, excluding 10^10. ]]></parameter>
			</parameters>
			<syntax><![CDATA[CHIDIST(x,deg_freedom)]]></syntax>
			<short><![CDATA[Returns the one-tailed probability of the chi-squared distribution.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="CHIINV" category="STATISTICAL">
		<translation>CHIINV</translation>
		<description>
			<parameters>
				<parameter name="Probability" type="number"><![CDATA[Probability is a probability associated with the chi-squared distribution, a value between 0 and 1 inclusive. ]]></parameter>
				<parameter name="Deg_freedom" type="number"><![CDATA[Deg_freedom is the number of degrees of freedom, a number between 1 and 10^10, excluding 10^10. ]]></parameter>
			</parameters>
			<syntax><![CDATA[CHIINV(probability,deg_freedom)]]></syntax>
			<short><![CDATA[Returns the inverse of the one-tailed probability of the chi-squared distribution. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="CHITEST" category="STATISTICAL">
		<translation>CHITEST</translation>
		<description>
			<parameters>
				<parameter name="Actual_range" type="reference"><![CDATA[Actual_range is the range of data that contains observations to test against expected values. ]]></parameter>
				<parameter name="Expected_range" type="reference"><![CDATA[Expected_range is the range of data that contains the ratio of the product of row totals and column totals to the grand total. ]]></parameter>
			</parameters>
			<syntax><![CDATA[CHITEST(actual_range,expected_range)]]></syntax>
			<short><![CDATA[Returns the test for independence: the value from the chi-squared distribution for the statistic and the appropriate degrees of freedom. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="CHOOSE" category="LOOKUP_REFERENCE">
		<translation>CHOOSE</translation>
		<description>
			<parameters>
				<parameter name="index_num" type="number"><![CDATA[Index_num specifies which value argument is selected. 		  Index_num must be a number between 1 and 29, or a formula or reference to a cell 		  containing a number between 1 and 29. ]]></parameter>
				<sequence from="1" to="29">
					<parameter name="value" type="any"><![CDATA[Value1, value2, ... are 1 to 29 value arguments from which CHOOSE selects 		  a value or an action to perform based on index_num. 		  The arguments can be numbers, cell references, defined names, formulas, or text. ]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[CHOOSE(index_num,value1,value2,...)]]></syntax>
			<short><![CDATA[Uses index_num to return a value from the list of value arguments. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="CODE" category="TEXT">
		<translation>CODE</translation>
		<description>
			<parameters>
				<parameter name="Text" type="text"><![CDATA[Text is the text for which you want the code of the first character.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[CODE(text)]]></syntax>
			<short><![CDATA[Returns a numeric code for the first character in a text string, in the character set used by your computer. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="COLUMN" category="LOOKUP_REFERENCE">
		<translation>COLUMN</translation>
		<description>
			<parameters>
				<parameter name="reference" type="reference"><![CDATA[Reference is the cell or range of cells for which you want the column number. ]]></parameter>
			</parameters>
			<syntax><![CDATA[COLUMN(reference)]]></syntax>
			<short><![CDATA[Returns the column number of the given reference. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="COLUMNS" category="LOOKUP_REFERENCE">
		<translation>COLUMNS</translation>
		<description>
			<parameters>
				<parameter name="array" type="reference"><![CDATA[Array is an array or array formula, or a reference to a range of cells 		  for which you want the number of columns. ]]></parameter>
			</parameters>
			<syntax><![CDATA[COLUMNS(array)]]></syntax>
			<short><![CDATA[Returns the number of columns in an array or reference. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="COMBIN" category="MATH_TRIG">
		<translation>COMBIN</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the total number of items.  ]]></parameter>
				<parameter name="Number_chosen" type="number"><![CDATA[Number_chosen is the number of items in each combination.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[COMBIN(number,number_chosen)]]></syntax>
			<short><![CDATA[Returns the number of combinations for a given number of items.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="CONCATENATE" category="TEXT">
		<translation>CONCATENATE</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Text" type="any"><![CDATA[text1,text2,... are 1 to 30 text strings to be joined into a single textstring and can be text strings, numbers, or single-cell references.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[CONCATENATE(text1,text2,...)]]></syntax>
			<short><![CDATA[Joins several text strings into one text string.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="CONFIDENCE" category="STATISTICAL">
		<translation>CONFIDENCE</translation>
		<description>
			<parameters>
				<parameter name="Alpha" type="number"><![CDATA[Alpha is the significance level used to compute the confidence level, a number greater than 0 and less than 1. ]]></parameter>
				<parameter name="Standard_dev" type="number"><![CDATA[Standard_dev is the population standard deviation for the data range and is assumed to be known. Standard_dev must be greater than 0. ]]></parameter>
				<parameter name="Size" type="number"><![CDATA[Size is the sample size.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[CONFIDENCE(alpha,standard_dev,size)]]></syntax>
			<short><![CDATA[Returns the confidence interval for a population mean.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="CORREL" category="STATISTICAL">
		<translation>CORREL</translation>
		<description>
			<parameters>
				<parameter name="Array1" type="reference"><![CDATA[Array1 is a cell range of values. The values should be numbers, names, arrays, or references that contain numbers. ]]></parameter>
				<parameter name="Array2" type="reference"><![CDATA[Array2 is a second cell range of values. The values should be numbers, names, arrays, or references that contain numbers. ]]></parameter>
			</parameters>
			<syntax><![CDATA[CORREL(array1,array2)]]></syntax>
			<short><![CDATA[Returns the correlation coefficient between two data sets.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="COS" category="MATH_TRIG">
		<translation>COS</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the angle in radians for which you want the cosine.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[COS(number)]]></syntax>
			<short><![CDATA[Returns the cosine of an angle.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="COSH" category="MATH_TRIG">
		<translation>COSH</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is any real number.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[COSH(number)]]></syntax>
			<short><![CDATA[Returns the hyperbolic cosine of a number.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="COUNT" category="STATISTICAL">
		<translation>COUNT</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Value" type="any"><![CDATA[Value1: value1,value2,... are 1 to 30 arguments that can contain or refer to a variety of different types of data, but only numbers are counted. ]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[COUNT(value1,value2,...)]]></syntax>
			<short><![CDATA[Counts the number of cells that contain numbers and numbers within the list of arguments. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="COUNTA" category="STATISTICAL">
		<translation>COUNTA</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Value" type="any"><![CDATA[Value1: value1,value2,... are 1 to 30 arguments representing the values and cells you want to count. Values can be any type of information. ]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[COUNTA(value1,value2,...)]]></syntax>
			<short><![CDATA[Counts the number of cells that are not empty and the values within the list of arguments. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="COUNTBLANK" category="STATISTICAL">
		<translation>COUNTBLANK</translation>
		<description>
			<parameters>
				<parameter name="Range" type="reference"><![CDATA[Range is the range from which you want to count the empty cells.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[COUNTBLANK(range)]]></syntax>
			<short><![CDATA[Counts the number of empty cells in a specified range of cells.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="COUNTIF" category="STATISTICAL">
		<translation>COUNTIF</translation>
		<description>
			<parameters>
				<parameter name="Range" type="reference"><![CDATA[Range is the range of cells from which you want to count nonblank cells.  ]]></parameter>
				<parameter name="Criteria" type="text"><![CDATA[Criteria is the condition in the form of a number, expression, or text that defines which cells will be counted. ]]></parameter>
			</parameters>
			<syntax><![CDATA[COUNTIF(range,criteria)]]></syntax>
			<short><![CDATA[Counts the number of cells within a range that meet the given condition.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="COVAR" category="STATISTICAL">
		<translation>COVAR</translation>
		<description>
			<parameters>
				<parameter name="Array1" type="reference"><![CDATA[Array1 is the first cell range of integers and must be numbers, arrays, or references that contain numbers. ]]></parameter>
				<parameter name="Array2" type="reference"><![CDATA[Array2 is the second cell range of integers and must be numbers, arrays, or references that contain numbers. ]]></parameter>
			</parameters>
			<syntax><![CDATA[COVAR(array1,array2)]]></syntax>
			<short><![CDATA[Returns covariance, the average of the products of deviations for each data point pair in two data sets. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="CRITBINOM" category="STATISTICAL">
		<translation>CRITBINOM</translation>
		<description>
			<parameters>
				<parameter name="Trials" type="number"><![CDATA[Trials is the number of Bernoulli trials.  ]]></parameter>
				<parameter name="Probability_s" type="number"><![CDATA[Probability_s is the probability of success on each trial, a number between 0 and 1 nclus ve. ]]></parameter>
				<parameter name="Alpha" type="number"><![CDATA[Alpha is the criterion value, a number between 0 and 1 inclusive.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[CRITBINOM(trials,probability_s,alpha)]]></syntax>
			<short><![CDATA[Returns the smallest value for which the cumulative binomial distribution is greater than or equal to a criterion value. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="DB" category="FINANCIAL">
		<translation>DB</translation>
		<description>
			<parameters>
				<parameter name="Cost" type="number"><![CDATA[Cost is the initial cost of the asset.]]></parameter>
				<parameter name="Salvage" type="number"><![CDATA[Salvage is the salvage value at the end of the life of the asset.]]></parameter>
				<parameter name="Life" type="number"><![CDATA[Life is the number of periods over which the asset is being depreciated(sometimes called the useful life of the asset).]]></parameter>
				<parameter name="Period" type="number"><![CDATA[Period is the period for which you want to calculate the depreciation. Period mustuse the same units as Life.]]></parameter>
				<parameter name="Month" type="number"><![CDATA[Month is the number of months in the first year. If month is omitted, it is assumed to be 12.]]></parameter>
			</parameters>
			<syntax><![CDATA[DB(cost,salvage,life,period,month)]]></syntax>
			<short><![CDATA[Returns the depreciation of an asset for a specified period using the fixed-declining balance method.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="DDB" category="FINANCIAL">
		<translation>DDB</translation>
		<description>
			<parameters>
				<parameter name="Cost" type="number"><![CDATA[Cost is the initial cost of the asset.]]></parameter>
				<parameter name="Salvage" type="number"><![CDATA[Salvage is the salvage value at the end of the life of the asset.]]></parameter>
				<parameter name="Life" type="number"><![CDATA[Life is the number of periods over which the asset is being depreciated(sometimes called the useful life of the asset).]]></parameter>
				<parameter name="Period" type="number"><![CDATA[Period is the period for which you want to calculate the depreciation. Period mustuse the same units as Life.]]></parameter>
				<parameter name="Factor" type="number"><![CDATA[Factor is the rate at which the balance declines. If Factor is omitted, it isassumed to be 2 (the double-declining balance method).]]></parameter>
			</parameters>
			<syntax><![CDATA[DDB(cost,salvage,life,period,factor)]]></syntax>
			<short><![CDATA[Returns the depreciation of an asset for a specified period using the double-declining balance method or some other method you specify.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="DEGREES" category="MATH_TRIG">
		<translation>DEGREES</translation>
		<description>
			<parameters>
				<parameter name="Angle" type="number"><![CDATA[Angle is the angle in radians that you want to convert.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[DEGREES(angle)]]></syntax>
			<short><![CDATA[Converts radians to degrees.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="DEVSQ" category="STATISTICAL">
		<translation>DEVSQ</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Number" type="any"><![CDATA[number1,number2,... are 1 to 30 arguments, or an array or arrayreference, on which you want DEVSQ to calculate.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[DEVSQ(number1,number2,...)]]></syntax>
			<short><![CDATA[Returns the sum of squares of deviations of data points from their sample mean. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ERROR.TYPE" category="INFORMATION">
		<translation>ERROR.TYPE</translation>
		<description>
			<parameters>
				<parameter name="Error_val" type="error"><![CDATA[Error_val is the error value for which you want the identifying number, and can be an actual error value or a reference to a cell containing an error value. ]]></parameter>
			</parameters>
			<syntax><![CDATA[ERROR.TYPE(error_val)]]></syntax>
			<short><![CDATA[Returns a number matching an error value.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="EVEN" category="MATH_TRIG">
		<translation>EVEN</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the value to round.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[EVEN(number)]]></syntax>
			<short><![CDATA[Rounds a positive number up and negative number down to the nearest even integer. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="EXACT" category="TEXT">
		<translation>EXACT</translation>
		<description>
			<parameters>
				<parameter name="Text1" type="text"><![CDATA[Text1 is the first text string.  ]]></parameter>
				<parameter name="Text2" type="text"><![CDATA[Text2 is the second text string.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[EXACT(text1,text2)]]></syntax>
			<short><![CDATA[Checks whether two text strings are exactly the same, and returns TRUE or FALSE. EXACT is case-sensitive. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="EXP" category="MATH_TRIG">
		<translation>EXP</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the exponent applied to the base e. The constant e equals 2.71828182845904, the base of the natural logarithm.]]></parameter>
			</parameters>
			<syntax><![CDATA[EXP(Number)]]></syntax>
			<short><![CDATA[Returns e raised to the power of a given number.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="EXPONDIST" category="STATISTICAL">
		<translation>EXPONDIST</translation>
		<description>
			<parameters>
				<parameter name="X" type="number"><![CDATA[X is the value of the function, a nonnegative number.  ]]></parameter>
				<parameter name="Lambda" type="number"><![CDATA[Lambda is the parameter value, a positive number.  ]]></parameter>
				<parameter name="Cumulative" type="logical"><![CDATA[Cumulative is a logical value for the function to return: the cumulative distribution function = TRUE; the probability density function = FALSE. ]]></parameter>
			</parameters>
			<syntax><![CDATA[EXPONDIST(x,lambda,cumulative)]]></syntax>
			<short><![CDATA[Returns the exponential distribution.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="FACT" category="MATH_TRIG">
		<translation>FACT</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the nonnegative number you want the factorial of.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[FACT(number)]]></syntax>
			<short><![CDATA[Returns the factorial of a number, equal to 1*2*3*...* Number.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="FALSE" category="LOGICAL">
		<translation>FALSE</translation>
		<description>
			<parameters/>
			<syntax><![CDATA[FALSE()]]></syntax>
			<short><![CDATA[Returns the logical value FALSE. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="FDIST" category="STATISTICAL">
		<translation>FDIST</translation>
		<description>
			<parameters>
				<parameter name="X" type="number"><![CDATA[X is the value at which to evaluate the function, a nonnegative number.  ]]></parameter>
				<parameter name="Deg_freedom1" type="number"><![CDATA[Deg_freedom1 is the numerator degrees of freedom, a number between 1 and 10^10, excluding 10^10. ]]></parameter>
				<parameter name="Deg_freedom2" type="number"><![CDATA[Deg_freedom2 is the denominator degrees of freedom, a number between 1 and 10^10, excluding 10^10. ]]></parameter>
			</parameters>
			<syntax><![CDATA[FDIST(x,deg_freedom1,deg_freedom2)]]></syntax>
			<short><![CDATA[Returns the F probability distribution (degree of diversity) for two data sets.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="FIND" category="TEXT">
		<translation>FIND</translation>
		<description>
			<parameters>
				<parameter name="Find_text" type="text"><![CDATA[Find_text is the text you want to find. Use double quotes (empty text) to match the first character in Within_text; wildcard characters not allowed. ]]></parameter>
				<parameter name="Within_text" type="text"><![CDATA[Within_text is the text containing the text you want to find.  ]]></parameter>
				<parameter name="Start_num" type="number"><![CDATA[Start_num specifies the character at which to start the search. The first character in Within_text is character number 1. If omitted, Start_num = 1. ]]></parameter>
			</parameters>
			<syntax><![CDATA[FIND(find_text,within_text,start_num)]]></syntax>
			<short><![CDATA[Returns the starting position of one text string within another text string. FIND is case-sensitive. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="FINV" category="STATISTICAL">
		<translation>FINV</translation>
		<description>
			<parameters>
				<parameter name="Probability" type="number"><![CDATA[Probability is a probability associated with the F cumulative distribution, a number between 0 and 1 inclusive. ]]></parameter>
				<parameter name="Deg_freedom1" type="number"><![CDATA[Deg_freedom1 is the numerator degrees of freedom, a number between 1 and 10^10, excluding 10^10. ]]></parameter>
				<parameter name="Deg_freedom2" type="number"><![CDATA[Deg_freedom2 is the denominator degrees of freedom, a number between 1 and 10^10, excluding 10^10. ]]></parameter>
			</parameters>
			<syntax><![CDATA[FINV(probability,deg_freedom1,deg_freedom2)]]></syntax>
			<short><![CDATA[Returns the inverse of the F probability distribution: if p = FDIST(x,...), then FINV(p,...) = x. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="FISHER" category="STATISTICAL">
		<translation>FISHER</translation>
		<description>
			<parameters>
				<parameter name="X" type="number"><![CDATA[X is the value for which you want the transformation, a number between -1 and 1, excluding -1 and 1. ]]></parameter>
			</parameters>
			<syntax><![CDATA[FISHER(x)]]></syntax>
			<short><![CDATA[Returns the Fisher transformation.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="FISHERINV" category="STATISTICAL">
		<translation>FISHERINV</translation>
		<description>
			<parameters>
				<parameter name="Y" type="number"><![CDATA[Y is the value for which you want to perform the inverse of the transformation. ]]></parameter>
			</parameters>
			<syntax><![CDATA[FISHERINV(y)]]></syntax>
			<short><![CDATA[Returns the inverse of the Fisher transformation: if y = FISHER(x), then FISHERINV(y) = x. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="FLOOR" category="MATH_TRIG">
		<translation>FLOOR</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the numeric value you want to round.  ]]></parameter>
				<parameter name="Significance" type="number"><![CDATA[Significance is the multiple to which you want to round. Number and Significance must either both be positive or both be negative. ]]></parameter>
			</parameters>
			<syntax><![CDATA[FLOOR(number,significance)]]></syntax>
			<short><![CDATA[Rounds a number down, toward zero, to the nearest multiple of significance.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="FORECAST" category="STATISTICAL">
		<translation>FORECAST</translation>
		<description>
			<parameters>
				<parameter name="X" type="number"><![CDATA[X is the data point for which you want to predict a value and must be a numeric value. ]]></parameter>
				<parameter name="Known_y's" type="reference"><![CDATA[Known_y's is the dependent array or range of numeric data.  ]]></parameter>
				<parameter name="Known_x's" type="reference"><![CDATA[Known_x's is the independent array or range of numeric data. The variance of Known_x's must not be zero. ]]></parameter>
			</parameters>
			<syntax><![CDATA[FORECAST(x,known_y's,known_x's)]]></syntax>
			<short><![CDATA[Calculates, or predicts, a future value along a linear trend by using existing values. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="FREQUENCY" category="STATISTICAL">
		<translation>FREQUENCY</translation>
		<description>
			<parameters>
				<parameter name="Data_array" type="reference"><![CDATA[Data_array is an array of or reference to a set of values for which you want to count frequencies (blanks and text are ignored). ]]></parameter>
				<parameter name="Bins_array" type="reference"><![CDATA[Bins_array is an array of or reference to intervals into which you want to group the values in data_array. ]]></parameter>
			</parameters>
			<syntax><![CDATA[FREQUENCY(data_array,bins_array)]]></syntax>
			<short><![CDATA[Calculates how often values occur within a range of values and then returns a vertical array of numbers having one more element than Bins_array. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="FTEST" category="STATISTICAL">
		<translation>FTEST</translation>
		<description>
			<parameters>
				<parameter name="Array1" type="reference"><![CDATA[Array1 is the first array or range of data and can be numbers or names, arrays, or references that contain numbers (blanks are ignored). ]]></parameter>
				<parameter name="Array2" type="reference"><![CDATA[Array2 is the second array or range of data and can be numbers or names, arrays, or references that contain numbers (blanks are ignored). ]]></parameter>
			</parameters>
			<syntax><![CDATA[FTEST(array1,array2)]]></syntax>
			<short><![CDATA[Returns the result of an F-test, the one-tailed probability that the variances in Array1 and Array2 are not significantly different. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="FV" category="FINANCIAL">
		<translation>FV</translation>
		<description>
			<parameters>
				<parameter name="Rate" type="number"><![CDATA[Rate is the interest rate per period. For example, use 6%/4 for quarterlypayments at 6% APR.]]></parameter>
				<parameter name="Nper" type="number"><![CDATA[Nper is the total number of payment periods in the investment.]]></parameter>
				<parameter name="Pmt" type="number"><![CDATA[Pmt is the payment made each period; it cannot change over the life of theinvestment.]]></parameter>
				<parameter name="Pv" type="number"><![CDATA[Pv is the present value, or the lump-sum amount that a series of futurepayments is worth now. If omitted, Pv = 0.]]></parameter>
				<parameter name="Type" type="logical"><![CDATA[Type is a value representing the timing of payment: payment at the beginning of the period = 1; payment at the end of the period = 0 or omitted.]]></parameter>
			</parameters>
			<syntax><![CDATA[FV(rate,nper,pmt,pv,type)]]></syntax>
			<short><![CDATA[Returns the future value of an investment based on periodic, constantpayments and a constant interest rate.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="GAMMADIST" category="STATISTICAL">
		<translation>GAMMADIST</translation>
		<description>
			<parameters>
				<parameter name="X" type="number"><![CDATA[X is the value at which you want to evaluate the distribution, a nonnegative number. ]]></parameter>
				<parameter name="Alpha" type="number"><![CDATA[Alpha is a parameter to the distribution, a positive number.  ]]></parameter>
				<parameter name="Beta" type="number"><![CDATA[Beta is a parameter to the distribution, a positive number. If beta = 1, GAMMADIST returns the standard gamma distribution. ]]></parameter>
				<parameter name="Cumulative" type="logical"><![CDATA[Cumulative is a logical value: returns the cumulative distribution function if TRUE. ]]></parameter>
			</parameters>
			<syntax><![CDATA[GAMMADIST(x,alpha,beta,cumulative)]]></syntax>
			<short><![CDATA[Returns the gamma distribution.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="GAMMAINV" category="STATISTICAL">
		<translation>GAMMAINV</translation>
		<description>
			<parameters>
				<parameter name="Probability" type="number"><![CDATA[Probability is the probability associated with the gamma distribution, a number between 0 and 1, inclusive. ]]></parameter>
				<parameter name="Alpha" type="number"><![CDATA[Alpha is a parameter to the distribution, a positive number.  ]]></parameter>
				<parameter name="Beta" type="number"><![CDATA[Beta is a parameter to the distribution, a positive number. If beta = 1, GAMMAINV returns the inverse of the standard gamma distribution. ]]></parameter>
			</parameters>
			<syntax><![CDATA[GAMMAINV(probability,alpha,beta)]]></syntax>
			<short><![CDATA[Returns the inverse of the gamma cumulative distribution: if p = GAMMADIST(x,...), then GAMMAINV(p,...) = x. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="GAMMALN" category="STATISTICAL">
		<translation>GAMMALN</translation>
		<description>
			<parameters>
				<parameter name="X" type="number"><![CDATA[X is the value for which you want to calculate GAMMALN, a positive number.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[GAMMALN(x)]]></syntax>
			<short><![CDATA[Returns the natural logarithm of the gamma function.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="GEOMEAN" category="STATISTICAL">
		<translation>GEOMEAN</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Number" type="any"><![CDATA[number1,number2,... are 1 to 30 numbers or names, arrays, orreferences that contain numbers for which you want the mean.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[GEOMEAN(number1,number2,...)]]></syntax>
			<short><![CDATA[Returns the geometric mean of an array or range of positive numeric data.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="HARMEAN" category="STATISTICAL">
		<translation>HARMEAN</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Number" type="any"><![CDATA[number1,number2,... are 1 to 30 numbers or names, arrays, orreferences that contain numbers for which you want the harmonic mean.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[HARMEAN(number1,number2,...)]]></syntax>
			<short><![CDATA[Returns the harmonic mean of a data set of positive numbers: the reciprocal of the arithmetic mean of reciprocals. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="HIDECOLUMN" category="LOOKUP_REFERENCE">
		<translation>HIDECOLUMN</translation>
		<description>
			<parameters>
				<parameter name="reference_cell" type="reference"><![CDATA[Please enter here a cell-reference, e.g. D1.]]></parameter>
			</parameters>
			<syntax><![CDATA[HIDECOLUMN(reference_cell)]]></syntax>
			<short><![CDATA[If the entry of the reference_cell is not 0, then the column with the function will be hidden. The entry of the reference_cell can be any number.]]></short>
			<long><![CDATA[If the entry of the reference_cell is not 0, then the function returns TRUE and the column with the function will be hidden. The entry of the reference_cell can be any number.]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="HIDEROW" category="LOOKUP_REFERENCE">
		<translation>HIDEROW</translation>
		<description>
			<parameters>
				<parameter name="reference_cell" type="reference"><![CDATA[Please enter here a cell-reference, e.g. D1.]]></parameter>
			</parameters>
			<syntax><![CDATA[HIDECOLUMN(reference_cell)]]></syntax>
			<short><![CDATA[If the entry of the reference_cell is not 0, then the row with the function will be hidden. The entry of the reference_cell can be any number.]]></short>
			<long><![CDATA[If the entry of the reference_cell is not 0, then the function returns TRUE and the row with the function will be hidden. The entry of the reference_cell can be any number.]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="HLOOKUP" category="LOOKUP_REFERENCE">
		<translation>HLOOKUP</translation>
		<description>
			<parameters>
				<parameter name="lookup_value" type="any"><![CDATA[Lookup_value is the value to be found in the first row of the table. 		  Lookup_value can be a value, a reference, or a text string. ]]></parameter>
				<parameter name="table_array" type="reference"><![CDATA[Table_array is a table of information in which data is looked up. 		  Use a reference to a range or a range name. ]]></parameter>
				<parameter name="row_index_num" type="number"><![CDATA[Row_index_num is the row number in table_array from which the matching value will be returned. 		  A row_index_num of 1 returns the first row value in table_array, a row_index_num of 2 		  returns the second row value in table_array, and so on. ]]></parameter>
				<parameter name="range_lookup" type="logical"><![CDATA[Range_lookup is a logical value that specifies whether you want HLOOKUP to find 		  an exact match or an approximate match. If TRUE or omitted, an approximate match is returned. 		  In other words, if an exact match is not found, the next largest value that is less than lookup_value is returned. 		  If FALSE, HLOOKUP will find an exact match. ]]></parameter>
			</parameters>
			<syntax><![CDATA[HLOOKUP(lookup_value,table_array,row_index_num,range_lookup)]]></syntax>
			<short><![CDATA[Searches for a value in the top row of a table or an array of values, 		and then returns a value in the same column from a row you specify in the table or array. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="HYPGEOMDIST" category="STATISTICAL">
		<translation>HYPGEOMDIST</translation>
		<description>
			<parameters>
				<parameter name="Sample_s" type="number"><![CDATA[Sample_s is the number of successes in the sample.  ]]></parameter>
				<parameter name="Number_sample" type="number"><![CDATA[Number_sample is the size of the sample.  ]]></parameter>
				<parameter name="Population_s" type="number"><![CDATA[Population_s is the number of successes in the population.  ]]></parameter>
				<parameter name="Number_pop" type="number"><![CDATA[Number_pop is the population size.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[HYPGEOMDIST(sample_s,number_sample,population_s,number_pop)]]></syntax>
			<short><![CDATA[Returns the hypergeometric distribution.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="IF" category="LOGICAL">
		<translation>IF</translation>
		<description>
			<parameters>
				<parameter name="Logical_test" type="logical"><![CDATA[Logical_test is any value or expression that can be evaluated to TRUE or FALSE.  ]]></parameter>
				<parameter name="Value_if_true" type="any"><![CDATA[Value_if_true is the value that is returned if Logical_test is TRUE. If omitted, TRUE is returned. You can nest up to seven IF functions. ]]></parameter>
				<parameter name="Value_if_false" type="any"><![CDATA[Value_if_false is the value that is returned if Logical_test is FALSE. If omitted, FALSE is returned. ]]></parameter>
			</parameters>
			<syntax><![CDATA[IF(logical_test,value_if_true,value_if_false)]]></syntax>
			<short><![CDATA[Checks whether a condition is met, and returns one value if TRUE, and another value if FALSE. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="INDEX" category="LOOKUP_REFERENCE">
		<translation>INDEX</translation>
		<description>
			<parameters>
				<parameter name="array" type="array"><![CDATA[Array is a range of cells or an array constant. ]]></parameter>
				<parameter name="row_num" type="number"><![CDATA[Row_num selects the row in array from which to return a value. 		  If row_num is omitted, column_num is required. ]]></parameter>
				<parameter name="column_num" type="number"><![CDATA[Column_num selects the column in array from which to return a value. 		  If column_num is omitted, row_num is required. ]]></parameter>
			</parameters>
			<syntax><![CDATA[INDEX(array,row_num,column_num)]]></syntax>
			<short><![CDATA[Returns the value of an element in a table or an array, selected by the row an column number indexes. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="INDEX" category="LOOKUP_REFERENCE">
		<translation>INDEX</translation>
		<description>
			<parameters>
				<parameter name="reference" type="reference"><![CDATA[Reference is a reference to one or more cell ranges. ]]></parameter>
				<parameter name="row_num" type="number"><![CDATA[Row_num is the number of the row in reference from which to return a reference. ]]></parameter>
				<parameter name="column_num" type="number"><![CDATA[Column_num is the number of the column in reference from which to return a reference. ]]></parameter>
				<parameter name="area_num" type="number"><![CDATA[Area_num selects a range in reference from which to return the intersection 		    of row_num and column_num. The first area selected or entered is numbered 1, the second is 2, and so on. 		    If area_num is omitted, INDEX uses area 1.]]></parameter>
			</parameters>
			<syntax><![CDATA[INDEX(reference,row_num,column_num,area_num)]]></syntax>
			<short><![CDATA[Returns the reference of the cell at the intersection of a particular row and column. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="INDIRECT" category="LOOKUP_REFERENCE">
		<translation>INDIRECT</translation>
		<description>
			<parameters>
				<parameter name="ref_text" type="text"><![CDATA[Ref_text is a reference to a cell that contains an A1-style reference, 		  an R1C1-style reference, a name defined as a reference, or a reference to a cell as a text string. ]]></parameter>
				<parameter name="a1" type="logical"><![CDATA[A1 is a logical value that specifies 		  what type of reference is contained in the cell ref_text. ]]></parameter>
			</parameters>
			<syntax><![CDATA[INDIRECT(ref_text,a1)]]></syntax>
			<short><![CDATA[Returns the reference specified by a text string. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="INT" category="MATH_TRIG">
		<translation>INT</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the real number you want to round down to an integer.]]></parameter>
			</parameters>
			<syntax><![CDATA[INT(number)]]></syntax>
			<short><![CDATA[Rounds a number down to the nearest integer.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="INTERCEPT" category="STATISTICAL">
		<translation>INTERCEPT</translation>
		<description>
			<parameters>
				<parameter name="Known_y's" type="reference"><![CDATA[Known_y's is the dependent set of observations or data and can be numbers or names, arrays, or references that contain numbers. ]]></parameter>
				<parameter name="Known_x's" type="reference"><![CDATA[Known_x's is the independent set of observations or data and can be numbers or names, arrays, or references that contain numbers. ]]></parameter>
			</parameters>
			<syntax><![CDATA[INTERCEPT(known_y's,known_x's)]]></syntax>
			<short><![CDATA[Calculates the point at which a line will intersect the y-axis by using a best-fit regression line plotted through the known x-values and y-values. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="IRR" category="FINANCIAL">
		<translation>IRR</translation>
		<description>
			<parameters>
				<parameter name="Values" type="reference"><![CDATA[Values is an array or a reference to cells that contain numbers for which youwant to calculate the internal rate of return.]]></parameter>
				<parameter name="Guess" type="number"><![CDATA[Guess is a number that you guess is close to the result of IRR; 0.1 (10 percent)if omitted.]]></parameter>
			</parameters>
			<syntax><![CDATA[IRR(values,guess)]]></syntax>
			<short><![CDATA[Returns the internal rate of return for a series of cash flows.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ISBLANK" category="INFORMATION">
		<translation>ISBLANK</translation>
		<description>
			<parameters>
				<parameter name="Value" type="any"><![CDATA[Value is the cell or a name that refers to the cell you want to test.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[ISBLANK(value)]]></syntax>
			<short><![CDATA[Checks whether a reference is to an empty cell, and returns TRUE or FALSE.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ISERR" category="INFORMATION">
		<translation>ISERR</translation>
		<description>
			<parameters>
				<parameter name="Value" type="any"><![CDATA[Value is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell, formula, or value. ]]></parameter>
			</parameters>
			<syntax><![CDATA[ISERR(value)]]></syntax>
			<short><![CDATA[Checks whether a value is an error (#VALUE!, #REF!, #DIV/0!, #NUM!, #NAME?, or #NULL) excluding #N/A, and returns TRUE or FALSE. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ISERROR" category="INFORMATION">
		<translation>ISERROR</translation>
		<description>
			<parameters>
				<parameter name="Value" type="any"><![CDATA[Value is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell, formula, or value. ]]></parameter>
			</parameters>
			<syntax><![CDATA[ISERROR(value)]]></syntax>
			<short><![CDATA[Checks whether a value is an error (#N/A, #VALUE!, #REF!, #DIV/0!, #NUM!, #NAME?, or #NULL), and returns TRUE or FALSE. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ISLOGICAL" category="INFORMATION">
		<translation>ISLOGICAL</translation>
		<description>
			<parameters>
				<parameter name="Value" type="any"><![CDATA[Value is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell, formula, or value. ]]></parameter>
			</parameters>
			<syntax><![CDATA[ISLOGICAL(value)]]></syntax>
			<short><![CDATA[Checks whether a value is a logical value (TRUE or FALSE), and returns TRUE or FALSE. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ISNA" category="INFORMATION">
		<translation>ISNA</translation>
		<description>
			<parameters>
				<parameter name="Value" type="any"><![CDATA[Value is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell, formula, or value. ]]></parameter>
			</parameters>
			<syntax><![CDATA[ISNA(value)]]></syntax>
			<short><![CDATA[Checks whether a value is #N/A, and returns TRUE or FALSE. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ISNONTEXT" category="INFORMATION">
		<translation>ISNONTEXT</translation>
		<description>
			<parameters>
				<parameter name="Value" type="any"><![CDATA[Value is the value you want tested: a cell; a formula; or a name referring to a cell, formula, or value. ]]></parameter>
			</parameters>
			<syntax><![CDATA[ISNONTEXT(value)]]></syntax>
			<short><![CDATA[Checks whether a value is not text (blank cells are not text), and returns TRUE or FALSE. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ISNUMBER" category="INFORMATION">
		<translation>ISNUMBER</translation>
		<description>
			<parameters>
				<parameter name="Value" type="any"><![CDATA[Value is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell, formula, or value. ]]></parameter>
			</parameters>
			<syntax><![CDATA[ISNUMBER(value)]]></syntax>
			<short><![CDATA[Checks whether a value is a number, and returns TRUE or FALSE.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ISPMT" category="FINANCIAL">
		<translation>ISPMT</translation>
		<description>
			<parameters>
				<parameter name="Rate" type="number"><![CDATA[Rate interest rate per period. For example, use 6%/4 for quarterly paymentsat 6% APR.]]></parameter>
				<parameter name="Per" type="number"><![CDATA[Per period for which you want to find the interest.]]></parameter>
				<parameter name="Nper" type="number"><![CDATA[Nper number of payment periods in an investment.]]></parameter>
				<parameter name="Pv" type="number"><![CDATA[Pv lump sum amount that a series of future payments is right now.]]></parameter>
			</parameters>
			<syntax><![CDATA[ISPMT(rate,per,nper,pv)]]></syntax>
			<short><![CDATA[Returns the interest paid during a specific period of an investment.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ISREF" category="INFORMATION">
		<translation>ISREF</translation>
		<description>
			<parameters>
				<parameter name="Value" type="any"><![CDATA[Value is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell, formula, or value. ]]></parameter>
			</parameters>
			<syntax><![CDATA[ISREF(value)]]></syntax>
			<short><![CDATA[Checks whether a value is a reference, and returns TRUE or FALSE.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ISTEXT" category="INFORMATION">
		<translation>ISTEXT</translation>
		<description>
			<parameters>
				<parameter name="Value" type="any"><![CDATA[Value is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell, formula, or value. ]]></parameter>
			</parameters>
			<syntax><![CDATA[ISTEXT(value)]]></syntax>
			<short><![CDATA[Checks whether a value is text, and returns TRUE or FALSE.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="KURT" category="STATISTICAL">
		<translation>KURT</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Number" type="any"><![CDATA[number1,number2,... are 1 to 30 numbers or names, arrays, orreferences that contain numbers for which you want the kurtosis.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[KURT(number1,number2,...)]]></syntax>
			<short><![CDATA[Returns the kurtosis of a data set.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="LARGE" category="STATISTICAL">
		<translation>LARGE</translation>
		<description>
			<parameters>
				<parameter name="Array" type="reference"><![CDATA[Array is the array or range of data for which you want to determine the k-th largest value. ]]></parameter>
				<parameter name="K" type="number"><![CDATA[K is the position (from the largest) in the array or cell range of the value to return. ]]></parameter>
			</parameters>
			<syntax><![CDATA[LARGE(array,k)]]></syntax>
			<short><![CDATA[Returns the k-th largest value in a data set. For example, the fifth largest number. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="LEFT" category="TEXT">
		<translation>LEFT</translation>
		<description>
			<parameters>
				<parameter name="Text" type="text"><![CDATA[Text is the text string containing the characters you want to extract.  ]]></parameter>
				<parameter name="Num_chars" type="number"><![CDATA[Num_chars specifies how many characters you want LEFT to extract; 1 if omitted.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[LEFT(text,num_chars)]]></syntax>
			<short><![CDATA[Returns the specified number of characters from the start of a text string.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="LEN" category="TEXT">
		<translation>LEN</translation>
		<description>
			<parameters>
				<parameter name="Text" type="text"><![CDATA[Text is the text whose length you want to find. Spaces count as characters.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[LEN(text)]]></syntax>
			<short><![CDATA[Returns the number of characters in a text string.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="LN" category="MATH_TRIG">
		<translation>LN</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the positive real number for which you want the natural logarithm.]]></parameter>
			</parameters>
			<syntax><![CDATA[LN(number)]]></syntax>
			<short><![CDATA[Returns the natural logarithm of a number.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="LOG" category="MATH_TRIG">
		<translation>LOG</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the positive real number for which you want the logarithm.]]></parameter>
				<parameter name="Base" type="number"><![CDATA[Base is the base of the logarithm; 10 if omitted.]]></parameter>
			</parameters>
			<syntax><![CDATA[LOG(number,base)]]></syntax>
			<short><![CDATA[Returns the logarithm of a number to the base you specify.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="LOG10" category="MATH_TRIG">
		<translation>LOG10</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the positive real number for which you want the base-10 logarithm.]]></parameter>
			</parameters>
			<syntax><![CDATA[LOG10(number)]]></syntax>
			<short><![CDATA[Returns the base-10 logarithm of a number.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="LOGINV" category="STATISTICAL">
		<translation>LOGINV</translation>
		<description>
			<parameters>
				<parameter name="Probability" type="number"><![CDATA[Probability is a probability associated with the lognormal distribution, a number between 0 and 1, inclusive. ]]></parameter>
				<parameter name="Mean" type="number"><![CDATA[Mean is the mean of ln(x).  ]]></parameter>
				<parameter name="Standard_dev" type="number"><![CDATA[Standard_dev is the standard deviation of ln(x), a positive number.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[LOGINV(probability,mean,standard_dev)]]></syntax>
			<short><![CDATA[Returns the inverse of the lognormal cumulative distribution function of x, where ln(x) is normally distributed with parameters Mean and Standard_dev. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="LOGNORMDIST" category="STATISTICAL">
		<translation>LOGNORMDIST</translation>
		<description>
			<parameters>
				<parameter name="X" type="number"><![CDATA[X is the value at which to evaluate the function, a positive number.  ]]></parameter>
				<parameter name="Mean" type="number"><![CDATA[Mean is the mean of ln(x).  ]]></parameter>
				<parameter name="Standard_dev" type="number"><![CDATA[Standard_dev is the standard deviation of ln(x), a positive number.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[LOGNORMDIST(x,mean,standard_dev)]]></syntax>
			<short><![CDATA[Returns the cumulative lognormal distribution of x, where ln(x) is normally distributed with parameters Mean and Standard_dev. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="LOOKUP" category="LOOKUP_REFERENCE">
		<translation>LOOKUP</translation>
		<description>
			<parameters>
				<parameter name="lookup_value" type="any"><![CDATA[Lookup_value is a value that LOOKUP searches for in the first vector.           Lookup_value can be a number, text, a logical value, or a name or reference that refers to a value. ]]></parameter>
				<parameter name="lookup_vector" type="reference"><![CDATA[Lookup_vector is a range that contains only one row or one column.           The values in lookup_vector can be text, numbers, or logical values. ]]></parameter>
				<parameter name="result_vector" type="reference"><![CDATA[Result_vector is a range that contains only one row or column.           It must be the same size as lookup_vector. ]]></parameter>
			</parameters>
			<syntax><![CDATA[LOOKUP(lookup_value,lookup_vector,result_vector)]]></syntax>
			<short><![CDATA[Returns a value from a one-row or one-column range.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="LOOKUP" category="LOOKUP_REFERENCE">
		<translation>LOOKUP</translation>
		<description>
			<parameters>
				<parameter name="lookup_value" type="any"><![CDATA[Lookup_value is a value that LOOKUP searches for in an array.           Lookup_value can be a number, text, a logical value, or a name or reference that refers to a value. ]]></parameter>
				<parameter name="array" type="array"><![CDATA[Array is a range of cells that contains text, numbers, or logical values           that you want to compare with lokkup_value. ]]></parameter>
			</parameters>
			<syntax><![CDATA[LOOKUP(lookup_value,array)]]></syntax>
			<short><![CDATA[Returns a value from an array. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="LOWER" category="TEXT">
		<translation>LOWER</translation>
		<description>
			<parameters>
				<parameter name="Text" type="text"><![CDATA[Text is the text you want to convert to lowercase. Characters in Text that are not letters are not changed. ]]></parameter>
			</parameters>
			<syntax><![CDATA[LOWER(text)]]></syntax>
			<short><![CDATA[Converts all letters in a text string to lowercase.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="MAX" category="STATISTICAL">
		<translation>MAX</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Number" type="any"><![CDATA[number1,number2,... are 1 to 30 numbers, empty cells, logical values, ortext numbers for which you want the maximum.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[MAX(number1,number2,...)]]></syntax>
			<short><![CDATA[Returns the largest value in a set of values. Ignores logical values and text.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="MAXA" category="STATISTICAL">
		<translation>MAXA</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Number" type="any"><![CDATA[number1,number2,... are 1 to 30 numbers, empty cells, logical values, ortext numbers for which you want the maximum.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[MAXA(value1,value2,...)]]></syntax>
			<short><![CDATA[Returns the largest value in a set of values. Does not ignore logical values and text. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="MDETERM" category="MATH_TRIG">
		<translation>MDETERM</translation>
		<description>
			<parameters>
				<parameter name="Array" type="reference"><![CDATA[Array is a numeric array with an equal number of rows and columns, either a cell range or an array constant. ]]></parameter>
			</parameters>
			<syntax><![CDATA[MDETERM(array)]]></syntax>
			<short><![CDATA[Returns the matrix determinant of an array.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="MEDIAN" category="STATISTICAL">
		<translation>MEDIAN</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Number" type="any"><![CDATA[number1,number2,... are 1 to 30 numbers or names, arrays, orreferences that contain numbers for which you want the median.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[MEDIAN(number1,number2,...)]]></syntax>
			<short><![CDATA[Returns the median, or the number in the middle of the set of given numbers.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="MID" category="TEXT">
		<translation>MID</translation>
		<description>
			<parameters>
				<parameter name="Text" type="text"><![CDATA[Text is the text string from which you want to extract the characters.  ]]></parameter>
				<parameter name="Start_num" type="number"><![CDATA[Start_num is the position of the first character you want to extract. The first character in Text is 1. ]]></parameter>
				<parameter name="Num_chars" type="number"><![CDATA[Num_chars specifies how many characters to return from Text.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[MID(text,start_num,num_chars)]]></syntax>
			<short><![CDATA[Returns the characters from the middle of a text string, given a starting position and length. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="MIN" category="STATISTICAL">
		<translation>MIN</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Number" type="any"><![CDATA[number1,number2,... are 1 to 30 numbers, empty cells, logical values, ortext numbers for which you want the minimum.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[MIN(number1,number2,...)]]></syntax>
			<short><![CDATA[Returns the smallest number in a set of values. Ignores logical values and text. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="MINA" category="STATISTICAL">
		<translation>MINA</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Value" type="any"><![CDATA[value1,value2,... are 1 to 30 numbers, empty cells, logical values, or textnumbers for which you want the minimum.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[MINA(value1,value2,...)]]></syntax>
			<short><![CDATA[Returns the smallest value in a set of values. Does not ignore logical values and text. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="MINVERSE" category="MATH_TRIG">
		<translation>MINVERSE</translation>
		<description>
			<parameters>
				<parameter name="Array" type="reference"><![CDATA[Array is a numeric array with an equal number of rows and columns, either a cell range or an array constant. ]]></parameter>
			</parameters>
			<syntax><![CDATA[MINVERSE(array)]]></syntax>
			<short><![CDATA[Returns the inverse matrix for the matrix stored in an array.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="MIRR" category="FINANCIAL">
		<translation>MIRR</translation>
		<description>
			<parameters>
				<parameter name="Values" type="reference"><![CDATA[Values is an array or a reference to cells that contain numbers that represent aseries of payments (negative) and income (positive) at regular periods.]]></parameter>
				<parameter name="Finance_rate" type="number"><![CDATA[Finance_rate is the interest rate you pay on the money used in the cash flows.]]></parameter>
				<parameter name="Reinvest_rate" type="number"><![CDATA[Reinvest_rate is the interest rate you receive on the cash flows as you reinvest them.]]></parameter>
			</parameters>
			<syntax><![CDATA[MIRR(values,finance_rate,reinvest_rate)]]></syntax>
			<short><![CDATA[Returns the internal rate of return for a series of periodic cash flows,considering both cost of investment and interest on reinvestment of cash.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="MMULT" category="MATH_TRIG">
		<translation>MMULT</translation>
		<description>
			<parameters>
				<parameter name="Array1" type="reference"><![CDATA[Array1 is the first array of numbers to multiply and must have the same number of columns as Array2 has rows. ]]></parameter>
				<parameter name="Array2" type="reference"><![CDATA[Array2 is the second array to multiply and must have the same number of rows as Array1 has columns. ]]></parameter>
			</parameters>
			<syntax><![CDATA[MMULT(array1,array2)]]></syntax>
			<short><![CDATA[Returns the matrix product of two arrays, an array with the same number of rows as Array1 and columns as Array2. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="MOD" category="MATH_TRIG">
		<translation>MOD</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the number for which you want to find the remainder after the division is performed.]]></parameter>
				<parameter name="Divisor" type="number"><![CDATA[Divisor is the number by which you want to divide Number.]]></parameter>
			</parameters>
			<syntax><![CDATA[MOD(number,divisor)]]></syntax>
			<short><![CDATA[Returns the remainder after a number is divided by a divisor.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="MODE" category="STATISTICAL">
		<translation>MODE</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Number" type="any"><![CDATA[number1,number2,... are 1 to 30 numbers, or names, arrays, orreferences that contain numbers for which you want the mode.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[MODE(number1,number2,...)]]></syntax>
			<short><![CDATA[Returns the most frequently occurring, or repetitive, value in an array or range of data. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="NA" category="INFORMATION">
		<translation>NA</translation>
		<description>
			<parameters/>
			<syntax><![CDATA[NA()]]></syntax>
			<short><![CDATA[Returns the error value #N/A (value not available).  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="NEGBINOMDIST" category="STATISTICAL">
		<translation>NEGBINOMDIST</translation>
		<description>
			<parameters>
				<parameter name="Number_f" type="number"><![CDATA[Number_f is the number of failures.  ]]></parameter>
				<parameter name="Number_s" type="number"><![CDATA[Number_s is the threshold number of successes.  ]]></parameter>
				<parameter name="Probability_s" type="number"><![CDATA[Probability_s is the probability of a success; a number between 0 and 1.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[NEGBINOMDIST(number_f,number_s,probability_s)]]></syntax>
			<short><![CDATA[Returns the negative binomial distribution, the probability that there will be Number_f failures before the Number_s-th success, with Probability_s probability of a success.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="NORMDIST" category="STATISTICAL">
		<translation>NORMDIST</translation>
		<description>
			<parameters>
				<parameter name="X" type="number"><![CDATA[X is the value for which you want the distribution.  ]]></parameter>
				<parameter name="Mean" type="number"><![CDATA[Mean is the arithmetic mean of the distribution.  ]]></parameter>
				<parameter name="Standard_dev" type="number"><![CDATA[Standard_dev is the standard deviation of the distribution, a positive number.  ]]></parameter>
				<parameter name="Cumulative" type="logical"><![CDATA[Cumulative is a logical value: for the cumulative distribution function, use TRUE. ]]></parameter>
			</parameters>
			<syntax><![CDATA[NORMDIST(x,mean,standard_dev,cumulative)]]></syntax>
			<short><![CDATA[Returns the normal cumulative distribution for the specified mean and standard deviation. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="NORMINV" category="STATISTICAL">
		<translation>NORMINV</translation>
		<description>
			<parameters>
				<parameter name="Probability" type="number"><![CDATA[Probability is a probability corresponding to the normal distribution, a number between 0 and 1 inclusive. ]]></parameter>
				<parameter name="Mean" type="number"><![CDATA[Mean is the arithmetic mean of the distribution.  ]]></parameter>
				<parameter name="Standard_dev" type="number"><![CDATA[Standard_dev is the standard deviation of the distribution, a positive number.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[NORMINV(probability,mean,standard_dev)]]></syntax>
			<short><![CDATA[Returns the inverse of the normal cumulative distribution for the specified mean and standard deviation. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="NORMSDIST" category="STATISTICAL">
		<translation>NORMSDIST</translation>
		<description>
			<parameters>
				<parameter name="z" type="number"><![CDATA[Z is the value for which you want the distribution. ]]></parameter>
			</parameters>
			<syntax><![CDATA[NORMSDIST(z)]]></syntax>
			<short><![CDATA[Returns the standard normal cumulative distribution function. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="NORMSINV" category="STATISTICAL">
		<translation>NORMSINV</translation>
		<description>
			<parameters>
				<parameter name="probability" type="number"><![CDATA[Probability is a probability corresponding to the normal distribution. ]]></parameter>
			</parameters>
			<syntax><![CDATA[NORMSINV(probability)]]></syntax>
			<short><![CDATA[Returns the inverse of the standard normal cumulative distribution. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="NOT" category="LOGICAL">
		<translation>NOT</translation>
		<description>
			<parameters>
				<parameter name="Logical" type="logical"><![CDATA[Logical is a value or expression that can be evaluated to TRUE or FALSE.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[NOT(logical)]]></syntax>
			<short><![CDATA[Changes FALSE to TRUE, or TRUE to FALSE.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="NOW" category="DATE_TIME">
		<translation>NOW</translation>
		<description>
			<parameters/>
			<syntax><![CDATA[NOW()]]></syntax>
			<short><![CDATA[Returns the serial number of the current date and time. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="NPER" category="FINANCIAL">
		<translation>NPER</translation>
		<description>
			<parameters>
				<parameter name="Rate" type="number"><![CDATA[Rate is the interest rate per period. For example, use 6%/4 for quarterlypayments at 6% APR.]]></parameter>
				<parameter name="Pmt" type="number"><![CDATA[Pmt is the payment made each period; it cannot change over the life of the investment.]]></parameter>
				<parameter name="Pv" type="number"><![CDATA[Pv is the present value, or the lump-sum amount that a series of future payments is worth now.]]></parameter>
				<parameter name="Fv" type="number"><![CDATA[Fv is the future value, or a cash balance you want to attain after the last payment is made. If omitted, zero is used.]]></parameter>
				<parameter name="Type" type="logical"><![CDATA[Type is a logical value: payment at the beginning of the period = 1; payment at the end of the period = 0 or omitted.]]></parameter>
			</parameters>
			<syntax><![CDATA[NPER(rate,pmt,pv,fv,type)]]></syntax>
			<short><![CDATA[Returns the number of periods for an investment based on periodic, constant payments and a constant interest rate.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="NPV" category="FINANCIAL">
		<translation>NPV</translation>
		<description>
			<parameters>
				<parameter name="Rate" type="number"><![CDATA[Rate: is the rate of discount over the length of one period.  ]]></parameter>
				<sequence from="1" to="30">
					<parameter name="Number" type="number"><![CDATA[value1,value2,... are 1 to 29 payments and income, equally spaced intime and occurring at the end of each period.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[NPV(rate,value1,value2,...)]]></syntax>
			<short><![CDATA[Returns the net present value of an investment based on a discount rate and a series of future payments (negative values) and income (positive values). ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ODD" category="MATH_TRIG">
		<translation>ODD</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the value to round.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[ODD(number)]]></syntax>
			<short><![CDATA[Rounds a positive number up and negative number down to the nearest odd integer. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="OR" category="LOGICAL">
		<translation>OR</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Logical" type="logical"><![CDATA[logical1,logical2,... are 1 to 30 conditions that you want to test that canbe either TRUE or FALSE.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[OR(logical1,logical2,...)]]></syntax>
			<short><![CDATA[Checks whether any of the arguments are TRUE, and returns TRUE or FALSE. Returns FALSE only if all arguments are FALSE. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="PALO.AFILTER" category="PALO">
    <translation>PALO.AFILTER</translation>
    <description>
      <parameters>
        <parameter name="advanced filter matrix" type="text"><![CDATA[Array contains the definition for the field-filter. Supported operators for numeric criteria are: &lt;, &gt;, =\"]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.AFILTER(advanced filter matrix)]]></syntax>
      <short><![CDATA[The attribute filter removes elements which do not match with the defined attribut rows]]></short>
      <long><![CDATA[The attribute filter removes elements which do not match with the defined attribut rows]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.CUBE_LIST_DIMENSIONS" category="PALO">
    <translation>PALO.CUBE_LIST_DIMENSIONS</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Cube" type="text"><![CDATA[Name of the cube]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.CUBE_LIST_DIMENSIONS(Server/Database,Cube)]]></syntax>
      <short><![CDATA[Returns a list with all dimensions of a cube]]></short>
      <long><![CDATA[Returns a list with all dimensions of a cube]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.DATA" category="PALO">
    <translation>PALO.DATA</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Cube" type="text"><![CDATA[Name of the cube]]></parameter>
        <parameter name="Coordinates" type="text"><![CDATA[Coordinates in the order as in the cube]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.DATA(Server/Database,Cube,Coordinates)]]></syntax>
      <short><![CDATA[Returns the value of a cell from the cube]]></short>
      <long><![CDATA[Returns the value of the specified element from the cube]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.DATABASE_LIST_CUBES" category="PALO">
    <translation>PALO.DATABASE_LIST_CUBES</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Type" type="text"><![CDATA[Optional: type of the cubes (0=normal, 1=system, 2=attribute, 3=userinfo, 4=gpu)]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.DATABASE_LIST_CUBES(Server/Database,Type)]]></syntax>
      <short><![CDATA[Returns the list of all cubes of a server]]></short>
      <long><![CDATA[Returns the list of all cubes of a server]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.DATABASE_LIST_DIMENSIONS" category="PALO">
    <translation>PALO.DATABASE_LIST_DIMENSIONS</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Type" type="text"><![CDATA[Optional: type of the dimensions (0=normal, 1=system, 2=attribute, 3=userinfo)]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.DATABASE_LIST_DIMENSIONS(Server/Database,Type)]]></syntax>
      <short><![CDATA[Returns a list with all dimensions of a database]]></short>
      <long><![CDATA[Returns a list with all dimensions of a database]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.DATAC" category="PALO">
    <translation>PALO.DATAC</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Cube" type="text"><![CDATA[Name of the cube]]></parameter>
        <parameter name="Coordinates" type="text"><![CDATA[Coordinates in the order as in the cube]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.DATAC(Server/Database,Cube,Coordinates)]]></syntax>
      <short><![CDATA[Returns the value of a cell from the cube]]></short>
      <long><![CDATA[Returns the value of a cell from the cube]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.DATAT" category="PALO">
    <translation>PALO.DATAT</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Cube" type="text"><![CDATA[Name of the cube]]></parameter>
        <parameter name="Coordinates" type="text"><![CDATA[Coordinates in the order as in the cube]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.DATAT(Server/Database,Cube,Coordinates)]]></syntax>
      <short><![CDATA[Returns the value of the specified string element]]></short>
      <long><![CDATA[Returns the value of the specified string element]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.DATAV" category="PALO">
    <translation>PALO.DATAV</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Cube" type="text"><![CDATA[Name of the cube]]></parameter>
        <parameter name="Coordinates" type="text"><![CDATA[Coordinates in the order as in the cube]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.DATAV(Server/Database,Cube,Coordinates)]]></syntax>
      <short><![CDATA[Returns the value of the specified cell from the cube]]></short>
      <long><![CDATA[Returns the value of the specified cell from the cube]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.DATAX" category="PALO">
    <translation>PALO.DATAX</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Cube" type="text"><![CDATA[Name of the cube]]></parameter>
        <parameter name="Coordinates" type="text"><![CDATA[Coordinates in the order as in the cube]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.DATAX(Server/Database,Cube,Coordinates)]]></syntax>
      <short><![CDATA[Returns the value of a cell from the cube only if the function is on the active sheet.]]></short>
      <long><![CDATA[Returns the value of a cell from the cube only if the function is on the active sheet.]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.DFILTER" category="PALO">
    <translation>PALO.DFILTER</translation>
    <description>
      <parameters>
        <parameter name="subcube" type="text"><![CDATA[Palo.Subcube is necassary for DFilter. Arguments are cube name and its dimensions without the dimension which is included in the subset. This one has to be empty.]]></parameter>
        <parameter name="operations" type="text"><![CDATA[Designation of criteria for the defined values of each element . Possible operators are &lt;,&gt;,&lt;&gt;,=\"]]></parameter>
        <parameter name="top" type="text"><![CDATA[Optional. In case an integer value TOP is passed, only a number of TOP elements with the highest values are displayed. If the argument is left blank, the elements will not be restricted.]]></parameter>
        <parameter name="upper_percentage" type="text"><![CDATA[Numerical values between 1 and 99 only those elements will be selected, if their cumulated value results in a total value that is below the marginal value. The evaluation starts with the highest element.]]></parameter>
        <parameter name="lower_percentage" type="text"><![CDATA[Numerical value between 1 and 99. If e.g. 20 is entered all elements which are cumulated until &lt; = 20% will be evaluated. The evaluation starts with the least value.]]></parameter>
        <parameter name="cell_operator" type="text"><![CDATA[Will be applied to each slice. Operators: 0/empty = SUM, 1=ALL, 2=AVERAGE, 3=MAXIMUM,4=any, 5=MINIMUM, 7=TEXT. Only elements will be returned, not the values.]]></parameter>
        <parameter name="no_rules" type="text"><![CDATA[blank/false = extracted cell content with Enterprise Rules True = Enterprise Rules not to be applied.]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.DFILTER(subcube,operations,top,upper_percentage,lower_percentage,cell_operator,no_rules)]]></syntax>
      <short><![CDATA[A data value will be investigated for each element of a subset. This value can be from type of numeric or string.]]></short>
      <long><![CDATA[A data value will be investigated for each element of a subset. This value can be from type of numeric or string.]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.DIMENSION_LIST_CUBES" category="PALO">
    <translation>PALO.DIMENSION_LIST_CUBES</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.DIMENSION_LIST_CUBES(Server/Database,Dimension)]]></syntax>
      <short><![CDATA[Returns a list of all cubes which contain a specified dimension]]></short>
      <long><![CDATA[Returns a list of all cubes which contain a specified dimension]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.DIMENSION_LIST_ELEMENTS" category="PALO">
    <translation>PALO.DIMENSION_LIST_ELEMENTS</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Filter" type="text"><![CDATA[Removes empty elements]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.DIMENSION_LIST_ELEMENTS(Server/Database,Dimension,Filter)]]></syntax>
      <short><![CDATA[Returns the list with all elements of a specified dimension]]></short>
      <long><![CDATA[Returns the list with all elements of a specified dimension]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.EADD" category="PALO">
    <translation>PALO.EADD</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Type" type="text"><![CDATA[Type of the new element (use \'N\' for numeric, \'C\' for consolidation or \'S\' for string element)]]></parameter>
        <parameter name="Element" type="text"><![CDATA[Name of the new element]]></parameter>
        <parameter name="Parent Element" type="text"><![CDATA[Name of the parent element (use an empty string, if the new element should not be a child element)]]></parameter>
        <parameter name="Weight" type="text"><![CDATA[Consolidation factor of the new element]]></parameter>
        <parameter name="Clear" type="text"><![CDATA[If this is set to TRUE, the dimension is cleared before the new element is added. Otherwise an element will be added without clearing the dimension before.]]></parameter>
        <parameter name="Empty String" type="text"><![CDATA[Empty String]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.EADD(Server/Database,Dimension,Type,Element,Parent Element,Weight,Clear,Empty String)]]></syntax>
      <short><![CDATA[Adds the specified dimension element to the database.]]></short>
      <long><![CDATA[Adds the specified dimension element to the database.]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.EALIAS" category="PALO">
    <translation>PALO.EALIAS</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension.]]></parameter>
        <parameter name="Attribute" type="text"><![CDATA[Name of the Attribute.]]></parameter>
        <parameter name="AliasValue" type="text"><![CDATA[Name of the Alias you want to look for.]]></parameter>
        <parameter name="Index" type="text"><![CDATA[Index of the element in the result, which you want to show. 0 or empty for all elements.]]></parameter>
        <parameter name="Empty String" type="text"><![CDATA[Empty String.]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.EALIAS(Server/Database,Dimension,Attribute,AliasValue,Index,Empty String)]]></syntax>
      <short><![CDATA[Get a list of all elements with the matching alias.]]></short>
      <long><![CDATA[Get a list of all elements with the matching alias.]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.ECHILD" category="PALO">
    <translation>PALO.ECHILD</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Element" type="text"><![CDATA[Name of the parent element which contains the child element]]></parameter>
        <parameter name="Index" type="text"><![CDATA[Index number, that specifies the child element]]></parameter>
        <parameter name="Empty String" type="text"><![CDATA[Empty String]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.ECHILD(Server/Database,Dimension,Element,Index,Empty String)]]></syntax>
      <short><![CDATA[Returns the name of the specified child element]]></short>
      <long><![CDATA[Returns the name of the specified child element]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.ECHILDCOUNT" category="PALO">
    <translation>PALO.ECHILDCOUNT</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Element" type="text"><![CDATA[Name of the element]]></parameter>
        <parameter name="Empty String" type="text"><![CDATA[Empty String]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.ECHILDCOUNT(Server/Database,Dimension,Element,Empty String)]]></syntax>
      <short><![CDATA[Returns the number of children of the specified element]]></short>
      <long><![CDATA[Returns the number of children of the specified element]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.ECOUNT" category="PALO">
    <translation>PALO.ECOUNT</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Empty String" type="text"><![CDATA[Empty String]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.ECOUNT(Server/Database,Dimension,Empty String)]]></syntax>
      <short><![CDATA[Returns the number of elements in the specified dimension]]></short>
      <long><![CDATA[Returns the number of elements in the specified dimension]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.EDELETE" category="PALO">
    <translation>PALO.EDELETE</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension that contains the element that should be deleted]]></parameter>
        <parameter name="Element" type="text"><![CDATA[Name of the element which shold be deleted]]></parameter>
        <parameter name="Empty String" type="text"><![CDATA[Empty String.]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.EDELETE(Server/Database,Dimension,Element,Empty String)]]></syntax>
      <short><![CDATA[Deletes the specified element]]></short>
      <long><![CDATA[Deletes the specified element]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.EFIRST" category="PALO">
    <translation>PALO.EFIRST</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Empty String" type="text"><![CDATA[Empty String]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.EFIRST(Server/Database,Dimension,Empty String)]]></syntax>
      <short><![CDATA[Returns the first element in the specified dimension]]></short>
      <long><![CDATA[Returns the first element in the specified dimension]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.EINDENT" category="PALO">
    <translation>PALO.EINDENT</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Element" type="text"><![CDATA[Name of the element whose hierarchy-level should be retrieved]]></parameter>
        <parameter name="Empty String" type="text"><![CDATA[Empty String]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.EINDENT(Server/Database,Dimension,Element,Empty String)]]></syntax>
      <short><![CDATA[Returns the level of an element within a hierarchy (without parent-element: level 1, with one parent-level: level 2, etc.]]></short>
      <long><![CDATA[Returns the level of an element within a hierarchy (without parent-element: level 1, with one parent-level: level 2, etc.]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.EINDEX" category="PALO">
    <translation>PALO.EINDEX</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Element" type="text"><![CDATA[Name of the element, whose index is to dispaly]]></parameter>
        <parameter name="Empty String" type="text"><![CDATA[Empty String]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.EINDEX(Server/Database,Dimension,Element,Empty String)]]></syntax>
      <short><![CDATA[Returns the position of the specified element in the dimension]]></short>
      <long><![CDATA[Returns the position of the specified element in the dimension]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.EISCHILD" category="PALO">
    <translation>PALO.EISCHILD</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Parent Element" type="text"><![CDATA[Name of the parent element]]></parameter>
        <parameter name="Element" type="text"><![CDATA[Name of the element, which is to be checked whether it is a child element]]></parameter>
        <parameter name="Empty String" type="text"><![CDATA[Empty String]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.EISCHILD(Server/Database,Dimension,Parent Element,Element,Empty String)]]></syntax>
      <short><![CDATA[Checks if a parent element contains the specified element as child element]]></short>
      <long><![CDATA[Checks if a parent element contains the specified element as child element]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.ELEMENT_LIST_ANCESTORS" category="PALO">
    <translation>PALO.ELEMENT_LIST_ANCESTORS</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Dimension]]></parameter>
        <parameter name="Element" type="text"><![CDATA[Element]]></parameter>
        <parameter name="Empty String" type="text"><![CDATA[Empty String.]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.ELEMENT_LIST_ANCESTORS(Server/Database,Dimension,Element,Empty String)]]></syntax>
      <short><![CDATA[Returns all ancestors of the given element]]></short>
      <long><![CDATA[Returns all ancestors of the given element]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.ELEMENT_LIST_CHILDREN" category="PALO">
    <translation>PALO.ELEMENT_LIST_CHILDREN</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension which contains the specified element]]></parameter>
        <parameter name="Element" type="text"><![CDATA[Name of the consolidated element]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.ELEMENT_LIST_CHILDREN(Server/Database,Dimension,Element)]]></syntax>
      <short><![CDATA[Returns a list with all child elements of a consolidated element]]></short>
      <long><![CDATA[Returns a list with all child elements of a consolidated element]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.ELEMENT_LIST_DESCENDANTS" category="PALO">
    <translation>PALO.ELEMENT_LIST_DESCENDANTS</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Dimension]]></parameter>
        <parameter name="Element" type="text"><![CDATA[Element]]></parameter>
        <parameter name="Empty String" type="text"><![CDATA[Empty String.]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.ELEMENT_LIST_DESCENDANTS(Server/Database,Dimension,Element,Empty String)]]></syntax>
      <short><![CDATA[Returns all childs and grandchilds]]></short>
      <long><![CDATA[Returns all childs and grandchilds]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.ELEMENT_LIST_PARENTS" category="PALO">
    <translation>PALO.ELEMENT_LIST_PARENTS</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Element" type="text"><![CDATA[Name of the element]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.ELEMENT_LIST_PARENTS(Server/Database,Dimension,Element)]]></syntax>
      <short><![CDATA[Returns a list with all parents of an element]]></short>
      <long><![CDATA[Returns a list with all parents of an element]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.ELEMENT_LIST_SIBLINGS" category="PALO">
    <translation>PALO.ELEMENT_LIST_SIBLINGS</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Element" type="text"><![CDATA[Name of the element]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.ELEMENT_LIST_SIBLINGS(Server/Database,Dimension,Element)]]></syntax>
      <short><![CDATA[Returns a list with all elements which are on the same hierarchy-level as the specified element]]></short>
      <long><![CDATA[Returns a list with all elements which are on the same hierarchy-level as the specified element]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.ELEVEL" category="PALO">
    <translation>PALO.ELEVEL</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Element" type="text"><![CDATA[Name of the element whose level should be retrieved]]></parameter>
        <parameter name="Empty String" type="text"><![CDATA[Empty String]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.ELEVEL(Server/Database,Dimension,Element,Empty String)]]></syntax>
      <short><![CDATA[Returns the level of a specified element in the dimension hierarchy]]></short>
      <long><![CDATA[Returns the level in the dimension hierarchy of a specified element]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.ENAME" category="PALO">
    <translation>PALO.ENAME</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Index" type="text"><![CDATA[Index number, that specifies the position of the element in the dimension]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.ENAME(Server/Database,Dimension,Index)]]></syntax>
      <short><![CDATA[Returns the name of the element with the positionnumber 'index' (First element has positionnumber 1)]]></short>
      <long><![CDATA[Returns the name of the element with the positionnumber 'index' (First element has positionnumber 1)]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.ENEXT" category="PALO">
    <translation>PALO.ENEXT</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Element" type="text"><![CDATA[Name of the element. The next element of this element will be dispayed]]></parameter>
        <parameter name="Empty String" type="text"><![CDATA[Empty String]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.ENEXT(Server/Database,Dimension,Element,Empty String)]]></syntax>
      <short><![CDATA[Returns the name of the succeeding element in the dimension]]></short>
      <long><![CDATA[Returns the name of the succeeding element in the dimension]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.EPARENT" category="PALO">
    <translation>PALO.EPARENT</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Element" type="text"><![CDATA[Name of the element]]></parameter>
        <parameter name="Index" type="text"><![CDATA[Number of the parent element to retrieve]]></parameter>
        <parameter name="Empty String" type="text"><![CDATA[Empty String]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.EPARENT(Server/Database,Dimension,Element,Index,Empty String)]]></syntax>
      <short><![CDATA[Returns the name of the n th parent of the specified element]]></short>
      <long><![CDATA[Returns the name of the n th parent of the specified element]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.EPARENTCOUNT" category="PALO">
    <translation>PALO.EPARENTCOUNT</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Element" type="text"><![CDATA[Name of the element]]></parameter>
        <parameter name="Empty String" type="text"><![CDATA[Empty String]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.EPARENTCOUNT(Server/Database,Dimension,Element,Empty String)]]></syntax>
      <short><![CDATA[Returns the number of parent elements which contain the specified element as child element]]></short>
      <long><![CDATA[Returns the number of parent elements which contain the specified element as child element]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.EPREV" category="PALO">
    <translation>PALO.EPREV</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Element" type="text"><![CDATA[Name of the element.The previous element of this element will be displayed]]></parameter>
        <parameter name="Empty String" type="text"><![CDATA[Empty String.]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.EPREV(Server/Database,Dimension,Element,Empty String)]]></syntax>
      <short><![CDATA[Returns the name of the preceding element in the dimension]]></short>
      <long><![CDATA[Returns the name of the preceding element in the dimension]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.ERENAME" category="PALO">
    <translation>PALO.ERENAME</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Old Name" type="text"><![CDATA[Name of the element, whose name should be changed]]></parameter>
        <parameter name="New Name" type="text"><![CDATA[New Name]]></parameter>
        <parameter name="Empty String" type="text"><![CDATA[Empty String]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.ERENAME(Server/Database,Dimension,Old Name,New Name,Empty String)]]></syntax>
      <short><![CDATA[Renames the specified element]]></short>
      <long><![CDATA[Renames the specified element]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.ERROR_LOG" category="PALO">
    <translation>PALO.ERROR_LOG</translation>
    <description>
      <parameters>
        <parameter name="Error" type="text"><![CDATA[Cell that contains the error, so the cell with the Palo.Setdata function]]></parameter>
        <parameter name="Path" type="text"><![CDATA[Path and name of the errorfile]]></parameter>
        <parameter name="Value" type="text"><![CDATA[Errornous value]]></parameter>
        <parameter name="Cube" type="text"><![CDATA[Name of the cube]]></parameter>
        <parameter name="Coordinates" type="text"><![CDATA[Coordinates in the order as in the cube]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.ERROR_LOG(Error,Path,Value,Cube,Coordinates)]]></syntax>
      <short><![CDATA[Writes the records, which returns error during the import loop, in an error file]]></short>
      <long><![CDATA[Writes the records, which returns error during the import loop, in an error file]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.ESIBLING" category="PALO">
    <translation>PALO.ESIBLING</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Element" type="text"><![CDATA[Name of the element]]></parameter>
        <parameter name="Index" type="text"><![CDATA[Index number, which determines the sibling element]]></parameter>
        <parameter name="Empty String" type="text"><![CDATA[Empty String]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.ESIBLING(Server/Database,Dimension,Element,Index,Empty String)]]></syntax>
      <short><![CDATA[Returns the name of the specified sibling]]></short>
      <long><![CDATA[Returns the name of the specified sibling]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.ETOPLEVEL" category="PALO">
    <translation>PALO.ETOPLEVEL</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.ETOPLEVEL(Server/Database,Dimension)]]></syntax>
      <short><![CDATA[Returns the number of the parent-levels in a dimension]]></short>
      <long><![CDATA[Returns the number of the parent-levels in a dimension]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.ETYPE" category="PALO">
    <translation>PALO.ETYPE</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Element" type="text"><![CDATA[Name of the element which type should be retrieved]]></parameter>
        <parameter name="Empty String" type="text"><![CDATA[Empty String]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.ETYPE(Server/Database,Dimension,Element,Empty String)]]></syntax>
      <short><![CDATA[Returns the type of the specified element]]></short>
      <long><![CDATA[Returns the type of the specified element]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.EUPDATE" category="PALO">
    <translation>PALO.EUPDATE</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Element" type="text"><![CDATA[Name of the new element]]></parameter>
        <parameter name="Type" type="text"><![CDATA[Type of the element (use \'N\' for numeric, \'C\' for consolidation or \'S\' for string element)]]></parameter>
        <parameter name="Children" type="text"><![CDATA[Array with consolidated elements. Leave blank if you just want to change the type of an element.]]></parameter>
        <parameter name="Append" type="text"><![CDATA[append the children]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.EUPDATE(Server/Database,Dimension,Element,Type,Children,Append)]]></syntax>
      <short><![CDATA[Updates an existing element]]></short>
      <long><![CDATA[Updates an existing element]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.EWEIGHT" category="PALO">
    <translation>PALO.EWEIGHT</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Parent" type="text"><![CDATA[Name of the consolidation element (Parent Element)]]></parameter>
        <parameter name="Child" type="text"><![CDATA[Name of the child element]]></parameter>
        <parameter name="Empty String" type="text"><![CDATA[Empty String]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.EWEIGHT(Server/Database,Dimension,Parent,Child,Empty String)]]></syntax>
      <short><![CDATA[Returns the consolidation weight of a specified component of an element.]]></short>
      <long><![CDATA[Returns the consolidation weight of a specified component of an element.]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.HFILTER" category="PALO">
    <translation>PALO.HFILTER</translation>
    <description>
      <parameters>
        <parameter name="element" type="text"><![CDATA[Selection of elements, which are above or below of ELEMENT in the hierarchy. Empty = elements below ELEMENT, TRUE = elements above ELEMENT will be displayed.]]></parameter>
        <parameter name="above" type="text"><![CDATA[This criteria works only with element. TRUE = All elements in higher-level hierarchy will be handled. FALSE/empty = All elements in less-level hierarchy will be handled.]]></parameter>
        <parameter name="exclusive" type="text"><![CDATA[\"TRUE\":  Element will not be shown. \"FALSE\" or empty: Element will be shown.]]></parameter>
        <parameter name="hide" type="text"><![CDATA[This cireteria works only with Element. 1 = basic elements will be blanked out. 2 = consolidated elements will be blanked out.]]></parameter>
        <parameter name="revolve_elem" type="text"><![CDATA[This criteria do not work with Element. Elements, which are not at level of REVOLVE ELEMENT will be removed.]]></parameter>
        <parameter name="revolve_count" type="text"><![CDATA[Defines the length of the revolving list (without REVOLVE-arguments possible). List length responds to the entered number.]]></parameter>
        <parameter name="revolve_add" type="text"><![CDATA[Shows elements with higher level (REVOLVE ADD = 1) or with less level (REVOLVE ADD = 2).]]></parameter>
        <parameter name="level_start" type="text"><![CDATA[Beginning of the hierarchical choice at level of this element (if empty, no hierarchical choice)]]></parameter>
        <parameter name="level_end" type="text"><![CDATA[The end of the hierarchical choice at level ot this element (if empty, until the top element)]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.HFILTER(element,above,exclusive,hide,revolve_elem,revolve_count,revolve_add,level_start,level_end)]]></syntax>
      <short><![CDATA[1. Filter elements of a subset by defining structur criteria. 2. Repeating of a subset with a different structure. Case 1 and Case 2 can not be combined.]]></short>
      <long><![CDATA[1. Filter elements of a subset by defining structur criteria. 2. Repeating of a subset with a different structure. Case 1 and Case 2 can not be combine.]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.PICKLIST" category="PALO">
    <translation>PALO.PICKLIST</translation>
    <description>
      <parameters>
        <parameter name="definition" type="text"><![CDATA[Creation of elements, which will be added to the subset]]></parameter>
        <parameter name="type" type="text"><![CDATA[Determines how the picklist-elements will be used. 0/empty = Elements will be added at the beginning of the subset, 1 = Elements will be added at the end of the subset, 2 = Elements will be merged into the subset, 3 = Picklist-elements are the exclusive pre-selection for the subset]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.PICKLIST(definition,type)]]></syntax>
      <short><![CDATA[Adds elements to the subset which can not deleted by no way. Further more a bulk can be defined, that attend as a filter]]></short>
      <long><![CDATA[Adds elements to the subset which can not deleted by no way. Further more a bulk can be defined, that attend as a filter]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.ROOT_LIST_DATABASES" category="PALO">
    <translation>PALO.ROOT_LIST_DATABASES</translation>
    <description>
      <parameters>
        <parameter name="Server" type="text"><![CDATA[Server]]></parameter>
        <parameter name="ListSystem" type="text"><![CDATA[List system databases too (TRUE/FALSE).]]></parameter>
        <parameter name="ListUserInfo" type="text"><![CDATA[List userinfo databases too (TRUE/FALSE).]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.ROOT_LIST_DATABASES(Server,ListSystem,ListUserInfo)]]></syntax>
      <short><![CDATA[Returns the list of all databases of a server.]]></short>
      <long><![CDATA[Returns the list of all databases of a server.]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.SERVER_SUBSET" category="PALO">
    <translation>PALO.SERVER_SUBSET</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Global" type="text"><![CDATA[True shows a global subset. False executes a local subset.]]></parameter>
        <parameter name="Subsetname" type="text"><![CDATA[Name of the Subset]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.SERVER_SUBSET(Server/Database,Dimension,Global,Subsetname)]]></syntax>
      <short><![CDATA[Returns a subset of dimension elements.]]></short>
      <long><![CDATA[Returns a subset of dimension elements.]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.SETDATA" category="PALO">
    <translation>PALO.SETDATA</translation>
    <description>
      <parameters>
        <parameter name="Value" type="text"><![CDATA[The value to be set(string or double)]]></parameter>
        <parameter name="Splash" type="text"><![CDATA[\"True\" if you refer to a consolidated cell. \"False\" if you refer to a base cell]]></parameter>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Cube" type="text"><![CDATA[Name of the cube]]></parameter>
        <parameter name="Coordinates" type="text"><![CDATA[Coordinates in the order as in the cube]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.SETDATA(Value,Splash,Server/Database,Cube,Coordinates)]]></syntax>
      <short><![CDATA[Sets a value of a cube cell]]></short>
      <long><![CDATA[Sets a value of a cube cell]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.SETDATAIF" category="PALO">
    <translation>PALO.SETDATAIF</translation>
    <description>
      <parameters>
        <parameter name="Condition" type="text"><![CDATA[]]></parameter>
        <parameter name="Value" type="text"><![CDATA[The value to be set(string or double)]]></parameter>
        <parameter name="Splash" type="text"><![CDATA[\"True\" if you refer to a consolidated cell. \"False\" if you refer to a base cell]]></parameter>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Cube" type="text"><![CDATA[Name of the cube]]></parameter>
        <parameter name="Coordinates" type="text"><![CDATA[Coordinates in the order as in the cube]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.SETDATAIF(Condition,Value,Splash,Server/Database,Cube,Coordinates)]]></syntax>
      <short><![CDATA[Sets a value of a cube cell if the condition is true]]></short>
      <long><![CDATA[Sets a value of a cube cell if the condition is true]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.SORT" category="PALO">
    <translation>PALO.SORT</translation>
    <description>
      <parameters>
        <parameter name="whole" type="text"><![CDATA[\"0\"/empty Definition order - default \"1\" shows hierarchy with child elements of elements which were removed from the subset. \"2\" Cuts the view at this position]]></parameter>
        <parameter name="criteria" type="text"><![CDATA[Grade for 0/empty = Definition, 1 = Data, 2 = Text, 3 = Alias]]></parameter>
        <parameter name="attribute" type="text"><![CDATA[Sorts by attributes. This filter should not be used with \"Criteria\"]]></parameter>
        <parameter name="type_limitation" type="text"><![CDATA[This function just works with Criteria and Whole together. 0/empty = no action, 1 = sorting of basic elements only, 2 = sort only consolidated elements]]></parameter>
        <parameter name="level_element" type="text"><![CDATA[This function wokrs with Criteria and Whole only. If not empty, it will sort on the given level]]></parameter>
        <parameter name="reverse" type="text"><![CDATA[Reverse the sorting. 0/empty = no action, 1= Consolidations below, 2 = total, 3= 1 and 2 combined]]></parameter>
        <parameter name="show_duplicates" type="text"><![CDATA[Display of duplicate values, 0/empty = hide duplicates, 1 show duplicates]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.SORT(whole,criteria,attribute,type_limitation,level_element,reverse,show_duplicates)]]></syntax>
      <short><![CDATA[Sort the elements of a subset in a given order. For example order of definition or hierarchical order]]></short>
      <long><![CDATA[Sort the elements of a subset in a given order. For example order of definition or hierarchical order]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.SUBCUBE" category="PALO">
    <translation>PALO.SUBCUBE</translation>
    <description>
      <parameters>
        <parameter name="cube" type="text"><![CDATA[Name of the cube]]></parameter>
        <parameter name="element" type="text"><![CDATA[Name of the Dimensions, that form the subcube, so that the elements were delimitated which have to be filtered. The place, where normaly the dimension from the subset stands has to be empty]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.SUBCUBE(cube,element)]]></syntax>
      <short><![CDATA[Is necessary for Palo DFilter. The function gets the slice as an argument. The dimension of the subset has to be empty. The respectivly element will be inserted here. For each dimension can be indicated any elements.]]></short>
      <long><![CDATA[Is necessary for Palo DFilter. The function gets the slice as an argument. The dimension of the subset has to be empty. The respectivly element will be inserted here. For each dimension can be indicated any elements.]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.SUBSET" category="PALO">
    <translation>PALO.SUBSET</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Indent" type="text"><![CDATA[Entry of \"1\" or \"2\" or \"3\" controls the kind of indent. If empty the view is flat]]></parameter>
        <parameter name="Alias" type="text"><![CDATA[Alternative name for an element that defined as an attribute]]></parameter>
        <parameter name="Filter" type="text"><![CDATA[Result of DFILTER, AFILTER, PICKLIST, HFILTER, TFILTER or SORT.]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.SUBSET(Server/Database,Dimension,Indent,Alias,Filter)]]></syntax>
      <short><![CDATA[Returns a subset of dimension elements]]></short>
      <long><![CDATA[Returns a subset of dimension elements]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.SUBSETSIZE" category="PALO">
    <translation>PALO.SUBSETSIZE</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Indent" type="text"><![CDATA[Entry of \"1\" or \"2\" or \"3\" controls the kind of indent. If empty the view is flat]]></parameter>
        <parameter name="Alias" type="text"><![CDATA[Alternative name for an element that defined as an attribute]]></parameter>
        <parameter name="Filter" type="text"><![CDATA[Result of DFILTER, AFILTER, PICKLIST, HFILTER, TFILTER or SORT.]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.SUBSETSIZE(Server/Database,Dimension,Indent,Alias,Filter)]]></syntax>
      <short><![CDATA[Returns the length of a subset of dimension elements]]></short>
      <long><![CDATA[Returns the length of a subset of dimension elements]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.SUBSETX" category="PALO">
    <translation>PALO.SUBSETX</translation>
    <description>
      <parameters>
        <parameter name="Server/Database" type="text"><![CDATA[Server/Database]]></parameter>
        <parameter name="Dimension" type="text"><![CDATA[Name of the dimension]]></parameter>
        <parameter name="Indent" type="text"><![CDATA[Entry of \"1\" or \"2\" or \"3\" controls the kind of indent. If empty the view is flat]]></parameter>
        <parameter name="Alias" type="text"><![CDATA[Alternative name for an element that defined as an attribute]]></parameter>
        <parameter name="Filter" type="text"><![CDATA[Result of DFILTER, AFILTER, PICKLIST, HFILTER, TFILTER or SORT.]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.SUBSETX(Server/Database,Dimension,Indent,Alias,Filter)]]></syntax>
      <short><![CDATA[Returns a subset of dimension elements if called from active sheet]]></short>
      <long><![CDATA[Returns a subset of dimension elements if called from active sheet]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
  <function name="PALO.TFILTER" category="PALO">
    <translation>PALO.TFILTER</translation>
    <description>
      <parameters>
        <parameter name="regex" type="text"><![CDATA[DOS filter criteria. \"D*\" for example removes all elements which do not beginn with \"D\"]]></parameter>
        <parameter name="extended" type="text"><![CDATA[Extended filter criteria. \"X$\" for example removes all elements which do not end with an \"X\"]]></parameter>
      </parameters>
      <syntax><![CDATA[PALO.TFILTER(regex,extended)]]></syntax>
      <short><![CDATA[Elements which match the specified string model will be shown, the rest will be removed. More than on filter criteria have to be specified in an array]]></short>
      <long><![CDATA[Elements which match the specified string model will be shown, the rest will be removed. More than on filter criteria have to be specified in an array]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function>
	<function name="PEARSON" category="STATISTICAL">
		<translation>PEARSON</translation>
		<description>
			<parameters>
				<parameter name="Array1" type="reference"><![CDATA[Array1 is a set of independent values.  ]]></parameter>
				<parameter name="Array2" type="reference"><![CDATA[Array2 is a set of dependent values.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[PEARSON(array1,array2)]]></syntax>
			<short><![CDATA[Returns the Pearson product moment correlation coefficient, r.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="PERCENTILE" category="STATISTICAL">
		<translation>PERCENTILE</translation>
		<description>
			<parameters>
				<parameter name="Array" type="reference"><![CDATA[Array is the array or range of data that defines relative standing.  ]]></parameter>
				<parameter name="K" type="number"><![CDATA[K is the percentile value that is between 0 through 1, inclusive.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[PERCENTILE(array,k)]]></syntax>
			<short><![CDATA[Returns the k-th percentile of values in a range.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="PERCENTRANK" category="STATISTICAL">
		<translation>PERCENTRANK</translation>
		<description>
			<parameters>
				<parameter name="Array" type="reference"><![CDATA[Array is the array or range of data with numeric values that defines relative standing. ]]></parameter>
				<parameter name="X" type="number"><![CDATA[X is the value for which you want to know the rank.  ]]></parameter>
				<parameter name="Significance" type="number"><![CDATA[Significance is an optional value that identifies the number of significant digits for the returned percentage, three digits if omitted (0.xxx%). ]]></parameter>
			</parameters>
			<syntax><![CDATA[PERCENTRANK(array,x,significance)]]></syntax>
			<short><![CDATA[Returns the rank of a value in a data set as a percentage of the data set.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="PERMUT" category="STATISTICAL">
		<translation>PERMUT</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the total number of objects.  ]]></parameter>
				<parameter name="Number_chosen" type="number"><![CDATA[Number_chosen is the number of objects in each permutation.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[PERMUT(number,number_chosen)]]></syntax>
			<short><![CDATA[Returns the number of permutations for a given number of objects that can be selected from the total objects. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="PI" category="MATH_TRIG">
		<translation>PI</translation>
		<description>
			<parameters/>
			<syntax><![CDATA[PI()]]></syntax>
			<short><![CDATA[Returns the value of Pi, 3.14159265358979, accurate to 15 digits.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="PMT" category="FINANCIAL">
		<translation>PMT</translation>
		<description>
			<parameters>
				<parameter name="Rate" type="number"><![CDATA[Rate is the interest rate per period for the loan. For example, use 6%/4 for quarterly payments at 6% APR.]]></parameter>
				<parameter name="Nper" type="number"><![CDATA[Nper is the total number of payments for the loan. ]]></parameter>
				<parameter name="Pv" type="number"><![CDATA[Pv is the present value: the total amount that a series of future payments is worth now.]]></parameter>
				<parameter name="Fv" type="number"><![CDATA[Fv is the future value, or a cash balance you want to attain after the last payment is made, 0 (zero) if omitted.]]></parameter>
				<parameter name="Type" type="logical"><![CDATA[Type is a logical value: payment at the beginning of the period = 1; payment at the end of the period = 0 or omitted.]]></parameter>
			</parameters>
			<syntax><![CDATA[PMT(rate,nper,pv,fv,type)]]></syntax>
			<short><![CDATA[Calculates the payment for a loan based on constant payments and a constant interest rate.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="POISSON" category="STATISTICAL">
		<translation>POISSON</translation>
		<description>
			<parameters>
				<parameter name="X" type="number"><![CDATA[X is the number of events.  ]]></parameter>
				<parameter name="Mean" type="number"><![CDATA[Mean is the expected numeric value, a positive number.  ]]></parameter>
				<parameter name="Cumulative" type="logical"><![CDATA[Cumulative is a logical value: for the cumulative Poisson probability, use TRUE; for the Poisson probability mass function, use FALSE. ]]></parameter>
			</parameters>
			<syntax><![CDATA[POISSON(x,mean,cumulative)]]></syntax>
			<short><![CDATA[Returns the Poisson distribution.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="POWER" category="MATH_TRIG">
		<translation>POWER</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the base number, any real number.]]></parameter>
				<parameter name="Power" type="number"><![CDATA[Power is the exponent, to which the base number is raised.]]></parameter>
			</parameters>
			<syntax><![CDATA[POWER(number,power)]]></syntax>
			<short><![CDATA[Returns the result of a number raised to a power.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="PROB" category="STATISTICAL">
		<translation>PROB</translation>
		<description>
			<parameters>
				<parameter name="X_range" type="reference"><![CDATA[X_range is the range of numeric values of x with which there are associated probabilities. ]]></parameter>
				<parameter name="Prob_range" type="reference"><![CDATA[Prob_range is the set of probabilities associated with values in X_range, values between 0 and 1 and excluding 0. ]]></parameter>
				<parameter name="Lower_limit" type="number"><![CDATA[Lower_limit is the lower bound on the value for which you want a probability.  ]]></parameter>
				<parameter name="Upper_limit" type="number"><![CDATA[Upper_limit is the optional upper bound on the value. If omitted, PROB returns the probability of being equal to lower_limit. ]]></parameter>
			</parameters>
			<syntax><![CDATA[PROB(x_range,prob_range,lower_limit,upper_limit)]]></syntax>
			<short><![CDATA[Returns the probability that values in a range are between two limits or equal to a lower limit. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="PRODUCT" category="MATH_TRIG">
		<translation>PRODUCT</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Number" type="number"><![CDATA[Number@: number1,number2,... are 1 to 30 numbers, logical values, or text representations of numbers that you want to multiply.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[PRODUCT(number1,number2,...)]]></syntax>
			<short><![CDATA[Multiplies all the numbers given as arguments.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="PROPER" category="TEXT">
		<translation>PROPER</translation>
		<description>
			<parameters>
				<parameter name="Text" type="text"><![CDATA[Text is text enclosed in quotation marks, a formula that returns text, or a reference to a cell containing text to partially capitalize. ]]></parameter>
			</parameters>
			<syntax><![CDATA[PROPER(text)]]></syntax>
			<short><![CDATA[Converts a text string to proper case; the first letter in each word in uppercase, and all other letters to lowercase. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="PV" category="FINANCIAL">
		<translation>PV</translation>
		<description>
			<parameters>
				<parameter name="Rate" type="number"><![CDATA[Rate is the interest rate per period. For example, use 6%/4 for quarterly payments at 6% APR.]]></parameter>
				<parameter name="Nper" type="number"><![CDATA[Nper is the total number of payment periods in an investment.  ]]></parameter>
				<parameter name="Pmt" type="number"><![CDATA[Pmt is the payment made each period and cannot change over the life of the investment.]]></parameter>
				<parameter name="Fv" type="number"><![CDATA[Fv is the future value, or a cash balance you want to attain after the last payment is made.]]></parameter>
				<parameter name="Type" type="logical"><![CDATA[Type is a logical value: payment at the beginning of the period = 1; payment at the end of the period = 0 or omitted.]]></parameter>
			</parameters>
			<syntax><![CDATA[PV(rate,nper,pmt,fv,type)]]></syntax>
			<short><![CDATA[Returns the present value of an investment: the total amount that a series of future payments is worth now.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="QUARTILE" category="STATISTICAL">
		<translation>QUARTILE</translation>
		<description>
			<parameters>
				<parameter name="Array" type="reference"><![CDATA[Array is the array or cell range of numeric values for which you want the quartile value. ]]></parameter>
				<parameter name="Quart" type="number"><![CDATA[Quart is a number: minimum value = 0; 1st quartile = 1; median value = 2; 3rd quartile = 3; maximum value = 4. ]]></parameter>
			</parameters>
			<syntax><![CDATA[QUARTILE(array,quart)]]></syntax>
			<short><![CDATA[Returns the quartile of a data set.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="RADIANS" category="MATH_TRIG">
		<translation>RADIANS</translation>
		<description>
			<parameters>
				<parameter name="Angle" type="number"><![CDATA[Angle is an angle in degrees that you want to convert.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[RADIANS(angle)]]></syntax>
			<short><![CDATA[Converts degrees to radians.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="RAND" category="MATH_TRIG">
		<translation>RAND</translation>
		<description>
			<parameters/>
			<syntax><![CDATA[RAND()]]></syntax>
			<short><![CDATA[Returns a random number greater than or equal to 0 and less than 1, evenly distributed (changes on recalculation). ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="RANK" category="STATISTICAL">
		<translation>RANK</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the number for which you want to find the rank.  ]]></parameter>
				<parameter name="Ref" type="reference"><![CDATA[Ref is an array of, or a reference to, a list of numbers. Nonnumeric values are ignored. ]]></parameter>
				<parameter name="Order" type="number"><![CDATA[Order is a number: rank in the list sorted descending = 0 or omitted; rank in the list sorted ascending = any nonzero value. ]]></parameter>
			</parameters>
			<syntax><![CDATA[RANK(number,ref,order)]]></syntax>
			<short><![CDATA[Returns the rank of a number in a list of numbers: its size relative to other values in the list. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="RATE" category="FINANCIAL">
		<translation>RATE</translation>
		<description>
			<parameters>
				<parameter name="Nper" type="number"><![CDATA[Nper is the total number of payment periods in an investment.  ]]></parameter>
				<parameter name="Pmt" type="number"><![CDATA[Pmt is the payment made each period and cannot change over the life of the investment. ]]></parameter>
				<parameter name="Pv" type="number"><![CDATA[Pv is the present value: the total amount that a series of future payments is worth now. ]]></parameter>
				<parameter name="Fv" type="number"><![CDATA[Fv is the future value, or a cash balance you want to attain after the last payment is made. ]]></parameter>
				<parameter name="Type" type="logical"><![CDATA[Type is a logical value: payment at the beginning of the period = 1; payment at the end of the period = 0 or omitted.]]></parameter>
				<parameter name="Guess" type="number"><![CDATA[Guess is your guess for what the rate will be. ]]></parameter>
			</parameters>
			<syntax><![CDATA[RATE(nper,pmt,pv,fv,type,guess)]]></syntax>
			<short><![CDATA[Returns the interest rate per period of a loan or an investment. For example, use 6%/4 for quarterly payments at 6% APR.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="REPLACE" category="TEXT">
		<translation>REPLACE</translation>
		<description>
			<parameters>
				<parameter name="Old_text" type="text"><![CDATA[Old_text is text in which you want to replace some characters.  ]]></parameter>
				<parameter name="Start_num" type="number"><![CDATA[Start_num is the position of the character in Old_text that you want to replace with New_text. ]]></parameter>
				<parameter name="Num_chars" type="number"><![CDATA[Num_chars is the number of characters in Old_text that you want to replace.  ]]></parameter>
				<parameter name="New_text" type="text"><![CDATA[New_text is the text that will replace characters in Old_text.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[REPLACE(old_text,start_num,num_chars,new_text)]]></syntax>
			<short><![CDATA[Replaces part of a text string with a different text string.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="REPT" category="TEXT">
		<translation>REPT</translation>
		<description>
			<parameters>
				<parameter name="Text" type="text"><![CDATA[Text is the text you want to repeat.  ]]></parameter>
				<parameter name="Number_times" type="number"><![CDATA[Number_times is a positive number specifying the number of times to repeat text.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[REPT(text,number_times)]]></syntax>
			<short><![CDATA[Repeats text a given number of times. Use REPT to fill a cell with a number of instances of a text string. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="RIGHT" category="TEXT">
		<translation>RIGHT</translation>
		<description>
			<parameters>
				<parameter name="Text" type="text"><![CDATA[Text is the text string that contains the characters you want to extract.  ]]></parameter>
				<parameter name="Num_chars" type="number"><![CDATA[Num_chars specifies how many characters you want to extract, 1 if omitted.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[RIGHT(text,num_chars)]]></syntax>
			<short><![CDATA[Returns the specified number of characters from the end of a text string.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ROUND" category="MATH_TRIG">
		<translation>ROUND</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the number you want to round.  ]]></parameter>
				<parameter name="Num_digits" type="number"><![CDATA[Num_digits is the number of digits to which you want to round. Negative rounds to the left of the decimal point; zero to the nearest integer. ]]></parameter>
			</parameters>
			<syntax><![CDATA[ROUND(number,num_digits)]]></syntax>
			<short><![CDATA[Rounds a number to a specified number of digits.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ROUNDDOWN" category="MATH_TRIG">
		<translation>ROUNDDOWN</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is any real number that you want rounded down.  ]]></parameter>
				<parameter name="Num_digits" type="number"><![CDATA[Num_digits is the number of digits to which you want to round. Negative rounds to the left of the decimal point; zero or omitted, to the nearest integer. ]]></parameter>
			</parameters>
			<syntax><![CDATA[ROUNDDOWN(number,num_digits)]]></syntax>
			<short><![CDATA[Rounds a number down, toward zero.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ROUNDUP" category="MATH_TRIG">
		<translation>ROUNDUP</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is any real number that you want rounded up.  ]]></parameter>
				<parameter name="Num_digits" type="number"><![CDATA[Num_digits is the number of digits to which you want to round. Negative rounds to the left of the decimal point; zero or omitted, to the nearest integer. ]]></parameter>
			</parameters>
			<syntax><![CDATA[ROUNDUP(number,num_digits)]]></syntax>
			<short><![CDATA[Rounds a number up, away from zero.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ROW" category="LOOKUP_REFERENCE">
		<translation>ROW</translation>
		<description>
			<parameters>
				<parameter name="reference" type="reference"><![CDATA[Reference is the cell or range of cells for which you want the row number.           If reference is omitted, it is assumed to be the reference of the cell in which the ROW function appears. ]]></parameter>
			</parameters>
			<syntax><![CDATA[ROW(reference)]]></syntax>
			<short><![CDATA[Returns the row number of a reference. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ROWS" category="LOOKUP_REFERENCE">
		<translation>ROWS</translation>
		<description>
			<parameters>
				<parameter name="array" type="reference"><![CDATA[Array is an array, an array formula,           or a reference to a range of cells for which you want the number of rows. ]]></parameter>
			</parameters>
			<syntax><![CDATA[ROWS(array)]]></syntax>
			<short><![CDATA[Returns the number of rows in a reference or array. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="RSQ" category="STATISTICAL">
		<translation>RSQ</translation>
		<description>
			<parameters>
				<parameter name="Known_y's" type="reference"><![CDATA[Known_y's is an array or range of data points and can be numbers or names, arrays, or references that contain numbers. ]]></parameter>
				<parameter name="Known_x's" type="reference"><![CDATA[Known_x's is an array or range of data points and can be numbers or names, arrays, or references that contain numbers. ]]></parameter>
			</parameters>
			<syntax><![CDATA[RSQ(known_y's,known_x's)]]></syntax>
			<short><![CDATA[Returns the square of the Pearson product moment correlation coefficient through the given data points. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="SEARCH" category="TEXT">
		<translation>SEARCH</translation>
		<description>
			<parameters>
				<parameter name="Find_text" type="text"><![CDATA[Find_text is the text you want to find. You can use the ? and * wildcard characters; use ~? and ~* to find the ? and * characters. ]]></parameter>
				<parameter name="Within_text" type="text"><![CDATA[Within_text is the text in which you want to search for Find_text.  ]]></parameter>
				<parameter name="Start_num" type="number"><![CDATA[Start_num is the character number in Within_text, counting from the left, at which you want to start searching. If omitted, 1 is used. ]]></parameter>
			</parameters>
			<syntax><![CDATA[SEARCH(find_text,within_text,start_num)]]></syntax>
			<short><![CDATA[Returns the number of the character at which a specific character or text string is first found, reading left to right (not case-sensitive). ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="SIGN" category="MATH_TRIG">
		<translation>SIGN</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is any real number.]]></parameter>
			</parameters>
			<syntax><![CDATA[SIGN(Number)]]></syntax>
			<short><![CDATA[Returns the sign of a number: 1 if the number is positive, zero if the number is zero, or -1 if the number is negative.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="SIN" category="MATH_TRIG">
		<translation>SIN</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the angle in radians for which you want the sine. Degrees * PI()/180 = radians.]]></parameter>
			</parameters>
			<syntax><![CDATA[SIN(number)]]></syntax>
			<short><![CDATA[Returns the sine of an angle.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="SINH" category="MATH_TRIG">
		<translation>SINH</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is any real number.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[SINH(number)]]></syntax>
			<short><![CDATA[Returns the hyperbolic sine of a number.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="SKEW" category="STATISTICAL">
		<translation>SKEW</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Number" type="any"><![CDATA[number1,number2,... are 1 to 30 numbers or names, arrays, orreferences that contain numbers for which you want the skewness.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[SKEW(number1,number2,...)]]></syntax>
			<short><![CDATA[Returns the skewness of a distribution: a characterization of the degree of asymmetry of a distribution around its mean. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="SLN" category="FINANCIAL">
		<translation>SLN</translation>
		<description>
			<parameters>
				<parameter name="Cost" type="number"><![CDATA[Cost is the initial cost of the asset.]]></parameter>
				<parameter name="Salvage" type="number"><![CDATA[Salvage is the salvage value at the end of the life of the asset.]]></parameter>
				<parameter name="Life" type="number"><![CDATA[Life is the number of periods over which the asset is being depreciated (sometimes called the useful life of the asset).]]></parameter>
			</parameters>
			<syntax><![CDATA[SLN(cost,salvage,life)]]></syntax>
			<short><![CDATA[Returns the straight-line depreciation of an asset for one period.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="SLOPE" category="STATISTICAL">
		<translation>SLOPE</translation>
		<description>
			<parameters>
				<parameter name="Known_y's" type="reference"><![CDATA[Known_y's is an array or cell range of numeric dependent data points and can be numbers or names, arrays, or references that contain numbers. ]]></parameter>
				<parameter name="Known_x's" type="reference"><![CDATA[Known_x's is the set of independent data points and can be numbers or names, arrays, or references that contain numbers. ]]></parameter>
			</parameters>
			<syntax><![CDATA[SLOPE(known_y's,known_x's)]]></syntax>
			<short><![CDATA[Returns the slope of the linear regression line through the given data points.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="SMALL" category="STATISTICAL">
		<translation>SMALL</translation>
		<description>
			<parameters>
				<parameter name="Array" type="reference"><![CDATA[Array is an array or range of numerical data for which you want to determine the k-th smallest value. ]]></parameter>
				<parameter name="K" type="number"><![CDATA[K is the position (from the smallest) in the array or range of the value to return. ]]></parameter>
			</parameters>
			<syntax><![CDATA[SMALL(array,k)]]></syntax>
			<short><![CDATA[Returns the k-th smallest value in a data set. For example, the fifth smallest number. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="SQRT" category="MATH_TRIG">
		<translation>SQRT</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the number for which you want the square root.]]></parameter>
			</parameters>
			<syntax><![CDATA[SQRT(number)]]></syntax>
			<short><![CDATA[Returns the square root of a number.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="STANDARDIZE" category="STATISTICAL">
		<translation>STANDARDIZE</translation>
		<description>
			<parameters>
				<parameter name="X" type="number"><![CDATA[X is the value you want to normalize.  ]]></parameter>
				<parameter name="Mean" type="number"><![CDATA[Mean is the arithmetic mean of the distribution.  ]]></parameter>
				<parameter name="Standard_dev" type="number"><![CDATA[Standard_dev is the standard deviation of the distribution, a positive number.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[STANDARDIZE(x,mean,standard_dev)]]></syntax>
			<short><![CDATA[Returns a normalized value from a distribution characterized by a mean and standard deviation. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="STDEV" category="STATISTICAL">
		<translation>STDEV</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Number" type="any"><![CDATA[number1,number2,... are 1 to 30 numbers corresponding to a sample of a population and can be numbers or references that contain numbers.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[STDEV(number1,number2,...)]]></syntax>
			<short><![CDATA[Estimates standard deviation based on a sample (ignores logical values and text in the sample). ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="STDEVA" category="STATISTICAL">
		<translation>STDEVA</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Number" type="any"><![CDATA[number1,number2,... are 1 to 30 numbers corresponding to a sample of a population and can be numbers or references that contain numbers.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[STDEVA(value1,value2,...)]]></syntax>
			<short><![CDATA[Estimates standard deviation based on a sample, including logical values and text. Text and the logical value FALSE have the value 0; the logical value TRUE has the value 1.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="STDEVP" category="STATISTICAL">
		<translation>STDEVP</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Number" type="any"><![CDATA[number1,number2,... are 1 to 30 numbers corresponding to a population and can be numbers or references that contain numbers.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[STDEVP(number1,number2,...)]]></syntax>
			<short><![CDATA[Calculates standard deviation based on the entire population given as arguments (ignores logical values and text). ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="STDEVPA" category="STATISTICAL">
		<translation>STDEVPA</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Value" type="any"><![CDATA[value1,value2,... are 1 to 30 values corresponding to a population and can be values, names, arrays, or references that contain values.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[STDEVPA(value1,value2,...)]]></syntax>
			<short><![CDATA[Calculates standard deviation based on an entire population, including logical values and text. Text and the logical value FALSE have the value 0; the logical value TRUE has the value 1.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="STEYX" category="STATISTICAL">
		<translation>STEYX</translation>
		<description>
			<parameters>
				<parameter name="Known_y's" type="reference"><![CDATA[Known_y's is an array or range of dependent data points and can be numbers or names, arrays, or references that contain numbers. ]]></parameter>
				<parameter name="Known_x's" type="reference"><![CDATA[Known_x's is an array or range of independent data points and can be numbers or names, arrays, or references that contain numbers. ]]></parameter>
			</parameters>
			<syntax><![CDATA[STEYX(known_y's,known_x's)]]></syntax>
			<short><![CDATA[Returns the standard error of the predicted y-value for each x in a regression. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="SUBSTITUTE" category="TEXT">
		<translation>SUBSTITUTE</translation>
		<description>
			<parameters>
				<parameter name="Text" type="text"><![CDATA[Text is the text or the reference to a cell containing text in which you want to substitute characters. ]]></parameter>
				<parameter name="Old_text" type="text"><![CDATA[Old_text is the existing text you want to replace. If the case of Old_text does not match the case of text, SUBSTITUTE will not replace the text. ]]></parameter>
				<parameter name="New_text" type="text"><![CDATA[New_text is the text you want to replace Old_text with.  ]]></parameter>
				<parameter name="Instance_num" type="number"><![CDATA[Instance_num specifies which occurrence of Old_text you want to replace. If omitted, every instance of Old_text is replaced. ]]></parameter>
			</parameters>
			<syntax><![CDATA[SUBSTITUTE(text,old_text,new_text,instance_num)]]></syntax>
			<short><![CDATA[Replaces existing text with new text in a text string.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="SUM" category="MATH_TRIG">
		<translation>SUM</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Number" type="any"><![CDATA[number1,number2,... are 1 to 30 numbers to sum. Logical values and textare ignored in cells, included if typed as arguments.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[SUM(number1,number2,...)]]></syntax>
			<short><![CDATA[Adds all the numbers in a range of cells.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="SUMIF" category="MATH_TRIG">
		<translation>SUMIF</translation>
		<description>
			<parameters>
				<parameter name="Range" type="reference"><![CDATA[Range is the range of cells you want evaluated.  ]]></parameter>
				<parameter name="Criteria" type="text"><![CDATA[Criteria is the condition or criteria in the form of a number, expression, or text that defines which cells will be added. ]]></parameter>
				<parameter name="Sum_range" type="reference"><![CDATA[Sum_range are the actual cells to sum. If omitted, the cells in range are used.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[SUMIF(range,criteria,sum_range)]]></syntax>
			<short><![CDATA[Adds the cells specified by a given condition or criteria.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="SUMPRODUCT" category="MATH_TRIG">
		<translation>SUMPRODUCT</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Array" type="reference"><![CDATA[Array@: array1,array2,... are 2 to 30 arrays for which you want to multiply and then add components. All arrays must have the same dimensions.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[SUMPRODUCT(array1,array2,array3,...)]]></syntax>
			<short><![CDATA[Returns the sum of the products of corresponding ranges or arrays.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="SUMSQ" category="MATH_TRIG">
		<translation>SUMSQ</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Number" type="any"><![CDATA[number1,number2,... are 1 to 30 numbers, arrays, names, or referencesto arrays for which you want the sum of the squares.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[SUMSQ(number1,number2,...)]]></syntax>
			<short><![CDATA[Returns the sum of the squares of the arguments. The arguments can be numbers, arrays, names, or references to cells that contain numbers. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="SUMX2MY2" category="MATH_TRIG">
		<translation>SUMX2MY2</translation>
		<description>
			<parameters>
				<parameter name="Array_x" type="reference"><![CDATA[Array_x is the first range or array of numbers and can be a number or name, array, or reference that contains numbers. ]]></parameter>
				<parameter name="Array_y" type="reference"><![CDATA[Array_y is the second range or array of numbers and can be a number or name, array, or reference that contains numbers. ]]></parameter>
			</parameters>
			<syntax><![CDATA[SUMX2MY2(array_x,array_y)]]></syntax>
			<short><![CDATA[Sums the differences between the squares of two corresponding ranges or arrays. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="SUMX2PY2" category="MATH_TRIG">
		<translation>SUMX2PY2</translation>
		<description>
			<parameters>
				<parameter name="Array_x" type="reference"><![CDATA[Array_x is the first range or array of numbers and can be a number or name, array, or reference that contains numbers. ]]></parameter>
				<parameter name="Array_y" type="reference"><![CDATA[Array_y is the second range or array of numbers and can be a number or name, array, or reference that contains numbers. ]]></parameter>
			</parameters>
			<syntax><![CDATA[SUMX2PY2(array_x,array_y)]]></syntax>
			<short><![CDATA[Returns the sum total of the sums of squares of numbers in two corresponding ranges or arrays. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="SUMXMY2" category="MATH_TRIG">
		<translation>SUMXMY2</translation>
		<description>
			<parameters>
				<parameter name="Array_x" type="reference"><![CDATA[Array_x is the first range or array of numbers and can be a number or name, array, or reference that contains numbers. ]]></parameter>
				<parameter name="Array_y" type="reference"><![CDATA[Array_y is the second range or array of numbers and can be a number or name, array, or reference that contains numbers. ]]></parameter>
			</parameters>
			<syntax><![CDATA[SUMXMY2(array_x,array_y)]]></syntax>
			<short><![CDATA[Sums the squares of the differences in two corresponding ranges or arrays.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="SYD" category="FINANCIAL">
		<translation>SYD</translation>
		<description>
			<parameters>
				<parameter name="Cost" type="number"><![CDATA[Cost is the initial cost of the asset.  ]]></parameter>
				<parameter name="Salvage" type="number"><![CDATA[Salvage is the salvage value at the end of the life of the asset.  ]]></parameter>
				<parameter name="Life" type="number"><![CDATA[Life is the number of periods over which the asset is being depreciated (sometimes called the useful life of the asset). ]]></parameter>
				<parameter name="Per" type="number"><![CDATA[Per is the period and must use the same units as Life.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[SYD(cost,salvage,life,per)]]></syntax>
			<short><![CDATA[Returns the sum-of-years' digits depreciation of an asset for a specified period. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="T" category="TEXT">
		<translation>T</translation>
		<description>
			<parameters>
				<parameter name="Value" type="any"><![CDATA[Value is the value to test.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[T(value)]]></syntax>
			<short><![CDATA[Checks whether a value is text, and returns the text if it is, or returns double quotes (empty text) if it is not. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="TAN" category="MATH_TRIG">
		<translation>TAN</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the angle in radians for which you want the tangent. Degrees * PI()/180 = radians.]]></parameter>
			</parameters>
			<syntax><![CDATA[TAN(number)]]></syntax>
			<short><![CDATA[Returns the tangent of an angle.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="TANH" category="MATH_TRIG">
		<translation>TANH</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is any real number.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[TANH(number)]]></syntax>
			<short><![CDATA[Returns the hyperbolic tangent of a number.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="TDIST" category="STATISTICAL">
		<translation>TDIST</translation>
		<description>
			<parameters>
				<parameter name="X" type="number"><![CDATA[X is the numeric value at which to evaluate the distribution.  ]]></parameter>
				<parameter name="Deg_freedom" type="number"><![CDATA[Deg_freedom is an integer indicating the number of degrees of freedom that characterize the distribution. ]]></parameter>
				<parameter name="Tails" type="number"><![CDATA[Tails specifies the number of distribution tails to return: one-tailed distribution = 1; two-tailed distribution = 2. ]]></parameter>
			</parameters>
			<syntax><![CDATA[TDIST(x,deg_freedom,tails)]]></syntax>
			<short><![CDATA[Returns the Student's t-distribution.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="TEXT" category="TEXT">
		<translation>TEXT</translation>
		<description>
			<parameters>
				<parameter name="Value" type="any"><![CDATA[Value is a numeric value, a formula that evaluates to a numeric value, or a reference to a cell containing a numeric value.]]></parameter>
				<parameter name="Format_text" type="text"><![CDATA[Format_text is a number format in text form from in the Category box on the Number tab in the Format Cells dialog box.]]></parameter>
			</parameters>
			<syntax><![CDATA[TEXT(value,format_text)]]></syntax>
			<short><![CDATA[Converts a value to text in a specific number format.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="TINV" category="STATISTICAL">
		<translation>TINV</translation>
		<description>
			<parameters>
				<parameter name="Probability" type="number"><![CDATA[Probability is the probability associated with the two-tailed Student's t-distribution, a number between 0 and 1 inclusive. ]]></parameter>
				<parameter name="Deg_freedom" type="number"><![CDATA[Deg_freedom is a positive integer indicating the number of degrees of freedom to characterize the distribution. ]]></parameter>
			</parameters>
			<syntax><![CDATA[TINV(probability,deg_freedom)]]></syntax>
			<short><![CDATA[Returns the inverse of the Student's t-distribution.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="TODAY" category="DATE_TIME">
		<translation>TODAY</translation>
		<description>
			<parameters/>
			<syntax><![CDATA[TODAY()]]></syntax>
			<short><![CDATA[Returns the serial number of the current date. The serial number         is the date-time code used by Microsoft Excel for date and time calculations. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="TRANSPOSE" category="LOOKUP_REFERENCE">
		<translation>TRANSPOSE</translation>
		<description>
			<parameters>
				<parameter name="array" type="reference"><![CDATA[Array is an array or range of cells on a worksheet that you want to transpose. ]]></parameter>
			</parameters>
			<syntax><![CDATA[TRANSPOSE(array)]]></syntax>
			<short><![CDATA[Returns a vertical range of cells as a horizontal range, or vice versa.         TRANSPOSE must be entered as an array formula in a range that has the same number of rows and columns,         respectively, as an array has columns and rows. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="TRIM" category="TEXT">
		<translation>TRIM</translation>
		<description>
			<parameters>
				<parameter name="Text" type="text"><![CDATA[Text is the text from which you want spaces removed.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[TRIM(text)]]></syntax>
			<short><![CDATA[Removes all spaces from a text string except for single spaces between words. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="TRIMMEAN" category="STATISTICAL">
		<translation>TRIMMEAN</translation>
		<description>
			<parameters>
				<parameter name="Array" type="reference"><![CDATA[Array is the range or array of values to trim and average.  ]]></parameter>
				<parameter name="Percent" type="number"><![CDATA[Percent is the fractional number of data points to exclude from the top and bottom of the data set. ]]></parameter>
			</parameters>
			<syntax><![CDATA[TRIMMEAN(array,percent)]]></syntax>
			<short><![CDATA[Returns the mean of the interior portion of a set of data values.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="TRUE" category="LOGICAL">
		<translation>TRUE</translation>
		<description>
			<parameters/>
			<syntax><![CDATA[TRUE()]]></syntax>
			<short><![CDATA[Returns the logical value TRUE.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="TRUNC" category="MATH_TRIG">
		<translation>TRUNC</translation>
		<description>
			<parameters>
				<parameter name="Number" type="number"><![CDATA[Number is the number you want to truncate.  ]]></parameter>
				<parameter name="Num_digits" type="number"><![CDATA[Num_digits is a number specifying the precision of the truncation, 0 (zero) if omitted.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[TRUNC(number,num_digits)]]></syntax>
			<short><![CDATA[Truncates a number to an integer by removing the decimal, or fractional, part of the number. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="TTEST" category="STATISTICAL">
		<translation>TTEST</translation>
		<description>
			<parameters>
				<parameter name="Array1" type="reference"><![CDATA[Array1 is the first data set.  ]]></parameter>
				<parameter name="Array2" type="reference"><![CDATA[Array2 is the second data set.  ]]></parameter>
				<parameter name="Tails" type="number"><![CDATA[Tails specifies the number of distribution tails to return: one-tailed distribution = 1; two-tailed distribution = 2. ]]></parameter>
				<parameter name="Type" type="number"><![CDATA[Type is the kind of t-test: paired = 1, homoscedastic = 2, heteroscedastic = 3. ]]></parameter>
			</parameters>
			<syntax><![CDATA[TTEST(array1,array2,tails,type)]]></syntax>
			<short><![CDATA[Returns the probability associated with a Student's t-Test.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="TYPE" category="INFORMATION">
		<translation>TYPE</translation>
		<description>
			<parameters>
				<parameter name="Value" type="any"><![CDATA[Value can be any value.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[TYPE(value)]]></syntax>
			<short><![CDATA[Returns an integer representing the data type of a value: number = 1; text = 2; logical value = 4; error value = 16; array = 64. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="UPPER" category="TEXT">
		<translation>UPPER</translation>
		<description>
			<parameters>
				<parameter name="Text" type="text"><![CDATA[Text is the text you want converted to uppercase, a reference or a text string.  ]]></parameter>
			</parameters>
			<syntax><![CDATA[UPPER(text)]]></syntax>
			<short><![CDATA[Converts a text string to all uppercase letters.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="VAR" category="STATISTICAL">
		<translation>VAR</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Number" type="any"><![CDATA[number1,number2,... are 1 to 30 numeric arguments corresponding to asample of a population.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[VAR(number1,number2,...)]]></syntax>
			<short><![CDATA[Estimates variance based on a sample (ignores logical values and text in the sample). ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="VARA" category="STATISTICAL">
		<translation>VARA</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Value" type="any"><![CDATA[value1,value2,... are 1 to 30 value arguments corresponding to a sampleof a population.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[VARA(value1,value2,...)]]></syntax>
			<short><![CDATA[Estimates variance based on a sample, including logical values and text. Text and the logical value FALSE have the value 0; the logical value TRUE has the value 1.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="VARP" category="STATISTICAL">
		<translation>VARP</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Number" type="any"><![CDATA[number1,number2,... are 1 to 30 numeric arguments corresponding to apopulation.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[VARP(number1,number2,...)]]></syntax>
			<short><![CDATA[Calculates variance based on the entire population (ignores logical values and text in the population). ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="VARPA" category="STATISTICAL">
		<translation>VARPA</translation>
		<description>
			<parameters>
				<sequence from="1" to="30">
					<parameter name="Value" type="any"><![CDATA[value1,value2,... are 1 to 30 value arguments corresponding to apopulation.]]></parameter>
				</sequence>
			</parameters>
			<syntax><![CDATA[VARPA(value1,value2,...)]]></syntax>
			<short><![CDATA[Calculates variance based on the entire population, including logical values and text. Text and the logical value FALSE have the value 0; the logical value TRUE has the value 1.]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="VLOOKUP" category="LOOKUP_REFERENCE">
		<translation>VLOOKUP</translation>
		<description>
			<parameters>
				<parameter name="lookup_value" type="any"><![CDATA[Lookup_value is the value to be found in the first column of the array.           Lookup_value can be a value, a reference, or a text string. ]]></parameter>
				<parameter name="table_array" type="reference"><![CDATA[Table_array is the table of information in which data is looked up.           Use a reference to a range or a range name, such as Database or List. ]]></parameter>
				<parameter name="col_index_num" type="number"><![CDATA[Col_index_num is the column number in table_array from which the matching value must be returned. ]]></parameter>
				<parameter name="range_lookup" type="logical"><![CDATA[Range_lookup is a logical value that specifies whether you want VLOOKUP           to find an exact match or an approximate match. If TRUE or omitted, an approximate match is returned.           In other words, if an exact match is not found, the next largest value that is less than lookup_value is returned.           If FALSE, VLOOKUP will find an exact match. ]]></parameter>
			</parameters>
			<syntax><![CDATA[VLOOKUP(lookup_value,table_array,col_index_num,range_lookup)]]></syntax>
			<short><![CDATA[Searches for a value in the leftmost column of a table,         and then returns a value in the same row from a column you specify in the table. ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="WEIBULL" category="STATISTICAL">
		<translation>WEIBULL</translation>
		<description>
			<parameters>
				<parameter name="X" type="number"><![CDATA[X is the value at which to evaluate the function, a nonnegative number.  ]]></parameter>
				<parameter name="Alpha" type="number"><![CDATA[Alpha is a parameter to the distribution, a positive number.  ]]></parameter>
				<parameter name="Beta" type="number"><![CDATA[Beta is a parameter to the distribution, a positive number.  ]]></parameter>
				<parameter name="Cumulative" type="logical"><![CDATA[Cumulative is a logical value: for the cumulative distribution function, use TRUE; for the probability mass function, use FALSE. ]]></parameter>
			</parameters>
			<syntax><![CDATA[WEIBULL(x,alpha,beta,cumulative)]]></syntax>
			<short><![CDATA[Returns the Weibull distribution.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
	<function name="ZTEST" category="STATISTICAL">
		<translation>ZTEST</translation>
		<description>
			<parameters>
				<parameter name="Array" type="reference"><![CDATA[Array is the array or range of data against which to test X.  ]]></parameter>
				<parameter name="X" type="number"><![CDATA[X is the value to test.  ]]></parameter>
				<parameter name="Sigma" type="number"><![CDATA[Sigma is the population (known) standard deviation. If omitted, the sample standard deviation is used. ]]></parameter>
			</parameters>
			<syntax><![CDATA[ZTEST(array,x,sigma)]]></syntax>
			<short><![CDATA[Returns the two-tailed P-value of a z-test.  ]]></short>
			<long><![CDATA[]]></long>
		</description>
		<comment><![CDATA[some text for the translator]]></comment>
	</function>
  <function name="VALUE" category="TEXT">
    <translation>VALUE</translation>
    <description>
      <parameters>
        <parameter name="Text" type="text"><![CDATA[Text is the text enclosed in quotation marks or a reference to a cell containing the text you want to convert.  ]]></parameter>
      </parameters>
      <syntax><![CDATA[VALUE(text)]]></syntax>
      <short><![CDATA[Converts a text string that represents a number to a number. ]]></short>
      <long><![CDATA[]]></long>
    </description>
    <comment><![CDATA[some text for the translator]]></comment>
  </function> 
</root>
